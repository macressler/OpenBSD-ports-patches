$OpenBSD: patch-src_daemon_c,v 1.9 2011/10/29 11:00:39 ajacoutot Exp $
--- src/daemon.c.orig	Mon Oct 17 21:30:22 2011
+++ src/daemon.c	Sat Oct 29 12:52:11 2011
@@ -52,13 +52,17 @@
 #define PATH_PASSWD "/etc/passwd"
 #define PATH_SHADOW "/etc/shadow"
 #define PATH_LOGIN_DEFS "/etc/login.defs"
-#define PATH_GDM_CUSTOM "/etc/gdm/custom.conf"
+#define PATH_GDM_CUSTOM "${SYSCONFDIR}/gdm/custom.conf"
 
+#if defined(__FreeBSD__) || defined(__OpenBSD__)
+#define FALLBACK_MINIMAL_UID 1000
+#endif
+
 #ifndef FALLBACK_MINIMAL_UID
 #define FALLBACK_MINIMAL_UID 500
 #endif
 
-#define USERDIR LOCALSTATEDIR "/lib/AccountsService/users"
+#define USERDIR LOCALSTATEDIR "/db/AccountsService/users"
 
 static const char *default_excludes[] = {
         "bin",
@@ -1023,7 +1027,12 @@ daemon_create_user_authorized_cb (Daemon              
         CreateUserData *cd = data;
         User *user;
         GError *error;
+#ifndef __OpenBSD__
         gchar *argv[9];
+#else
+        gchar *argv[12];
+        gchar *gargv[3];
+#endif
 
         if (getpwnam (cd->user_name) != NULL) {
                 throw_error (context, ERROR_USER_EXISTS, "A user with name '%s' already exists", cd->user_name);
@@ -1031,6 +1040,22 @@ daemon_create_user_authorized_cb (Daemon              
                 return;
         }
 
+#ifdef __OpenBSD__
+        GError *gerror;
+        sys_log (context, "create group '%s'", cd->user_name);
+
+        gargv[0] = "/usr/sbin/groupadd";
+        gargv[1] = cd->user_name;
+        gargv[2] = NULL;
+
+        gerror = NULL;
+        if (!spawn_with_login_uid (context, gargv, &gerror)) {
+                throw_error (context, ERROR_FAILED, "running '%s' failed: %s", gargv[0], gerror->message);
+                g_error_free (gerror);
+                return;
+        }
+#endif
+
         sys_log (context, "create user '%s'", cd->user_name);
 
         argv[0] = "/usr/sbin/useradd";
@@ -1039,15 +1064,34 @@ daemon_create_user_authorized_cb (Daemon              
         argv[3] = cd->real_name;
         if (cd->account_type == ACCOUNT_TYPE_ADMINISTRATOR) {
                 argv[4] = "-G";
+#ifdef __OpenBSD__
+                argv[5] = "wheel,users";
+                argv[6] = "-g";
+                argv[7] = cd->user_name;
+                argv[8] = "-L";
+                argv[9] = "staff";
+                argv[10] = cd->user_name;
+                argv[11] = NULL;
+#else
                 argv[5] = "wheel";
                 argv[6] = "--";
                 argv[7] = cd->user_name;
                 argv[8] = NULL;
+#endif
         }
         else if (cd->account_type == ACCOUNT_TYPE_STANDARD) {
+#ifdef __OpenBSD__
+                argv[4] = "-G";
+                argv[5] = "users";
+                argv[6] = "-g";
+                argv[7] = cd->user_name;
+                argv[8] = cd->user_name;
+                argv[9] = NULL;
+#else
                 argv[4] = "--";
                 argv[5] = cd->user_name;
                 argv[6] = NULL;
+#endif
         }
         else {
                 throw_error (context, ERROR_FAILED, "Don't know how to add user of type %d", cd->account_type);
@@ -1117,6 +1161,23 @@ daemon_delete_user_authorized_cb (Daemon              
 
                 return;
         }
+
+#ifdef __OpenBSD__
+        GError *gerror;
+        gchar *gargv[2];
+
+        sys_log (context, "delete group '%d'", pwent->pw_gid);
+
+        gargv[0] = "/usr/sbin/groupdel";
+        gargv[1] = pwent->pw_name;
+
+        gerror = NULL;
+        if (!spawn_with_login_uid (context, gargv, &gerror)) {
+                throw_error (context, ERROR_FAILED, "running '%s' failed: %s", argv[0], gerror->message);
+                g_error_free (gerror);
+                return;
+        }
+#endif
 
         sys_log (context, "delete user '%s' (%d)", pwent->pw_name, ud->uid);
 
