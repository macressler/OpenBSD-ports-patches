$OpenBSD: patch-lib_puppet_provider_package_openbsd_rb,v 1.4 2013/08/14 07:48:05 jasper Exp $

From a5b8b96f703d932b90ce7461b18076bb32ee85b3 Mon Sep 17 00:00:00 2001
From: Jasper Lievisse Adriaanse <jasper@humppa.nl>
Date: Tue, 23 Jul 2013 16:55:55 +0200
Subject: [PATCH] Enhance OpenBSD pkg.conf handling

From ee14796e05bb05a6829644827e510b2b8e8076d4 Mon Sep 17 00:00:00 2001
From: Jasper Lievisse Adriaanse <jasper@humppa.nl>
Date: Thu, 1 Aug 2013 17:32:46 +0200
Subject: [PATCH] (22023) Implement :purgeable feature for OpenBSD package provider

From 19b0e78df7e010f0af111fda083fd7f87499f952 Mon Sep 17 00:00:00 2001
From: Jasper Lievisse Adriaanse <jasper@humppa.nl>
Date: Wed, 31 Jul 2013 12:20:15 +0200
Subject: [PATCH] (22004) Fix regex for retrieving flavor.

From 1b672b5d6c7e8976b3a79d52e8db5d0823f61144 Mon Sep 17 00:00:00 2001
From: Jasper Lievisse Adriaanse <jasper@humppa.nl>
Date: Wed, 31 Jul 2013 11:33:58 +0200
Subject: [PATCH] (22021) Implement (un)install_options for OpenBSD package provider.

--- lib/puppet/provider/package/openbsd.rb.orig	Fri Jul 12 02:15:45 2013
+++ lib/puppet/provider/package/openbsd.rb	Wed Aug 14 09:45:30 2013
@@ -17,7 +17,7 @@ Puppet::Type.type(:package).provide :openbsd, :parent 
     begin
       execpipe(listcmd) do |process|
         # our regex for matching pkg_info output
-        regex = /^(.*)-(\d[^-]*)[-]?(\D*)(.*)$/
+        regex = /^(.*)-(\d[^-]*)[-]?(\w*)(.*)$/
         fields = [:name, :ensure, :flavor ]
         hash = {}
 
@@ -52,15 +52,18 @@ Puppet::Type.type(:package).provide :openbsd, :parent 
     [command(:pkginfo), "-a"]
   end
 
-  def install
-    should = @resource.should(:ensure)
-
+  def parse_pkgconf
     unless @resource[:source]
       if File.exist?("/etc/pkg.conf")
         File.open("/etc/pkg.conf", "rb").readlines.each do |line|
           if matchdata = line.match(/^installpath\s*=\s*(.+)\s*$/i)
             @resource[:source] = matchdata[1]
-            break
+          elsif matchdata = line.match(/^installpath\s*\+=\s*(.+)\s*$/i)
+            if @resource[:source].nil?
+              @resource[:source] = matchdata[1]
+            else
+              @resource[:source] += ":" + matchdata[1]
+            end
           end
         end
 
@@ -72,8 +75,16 @@ Puppet::Type.type(:package).provide :openbsd, :parent 
         raise Puppet::Error,
         "You must specify a package source or configure an installpath in /etc/pkg.conf"
       end
-    end
+    end  
+  end
 
+  def install
+    should = @resource.should(:ensure)
+
+    cmd = []
+
+    parse_pkgconf
+
     if @resource[:source][-1,1] == ::File::SEPARATOR
       e_vars = { 'PKG_PATH' => @resource[:source] }
       full_name = [ @resource[:name], get_version || @resource[:ensure], @resource[:flavor] ].join('-').chomp('-').chomp('-')
@@ -82,7 +93,10 @@ Puppet::Type.type(:package).provide :openbsd, :parent 
       full_name = @resource[:source]
     end
 
-     Puppet::Util.withenv(e_vars) { pkgadd full_name }
+    cmd << install_options
+    cmd << full_name
+
+    Puppet::Util.withenv(e_vars) { pkgadd cmd.flatten.compact.join(' ') }
   end
 
   def get_version
@@ -120,7 +134,43 @@ Puppet::Type.type(:package).provide :openbsd, :parent 
     end
   end
 
+  def install_options
+    join_options(resource[:install_options])
+  end
+
+  def uninstall_options
+    join_options(resource[:uninstall_options])
+  end
+
+  # Turns a array of options into flags to be passed to pkg_add(8) and
+  # pkg_delete(8). The options can be passed as a string or hash. Note
+  # that passing a hash should only be used in case -Dfoo=bar must be passed,
+  # which can be accomplished with:
+  #     install_options => [ { '-Dfoo' => 'bar' } ]
+  # Regular flags like '-L' must be passed as a string.
+  # @param options [Array]
+  # @return Concatenated list of options
+  # @api private
+  def join_options(options)
+    return unless options
+
+    options.collect do |val|
+      case val
+      when Hash
+        val.keys.sort.collect do |k|
+          "#{k}=#{val[k]}"
+        end.join(' ')
+      else
+        val
+      end
+    end
+  end
+
   def uninstall
-    pkgdelete @resource[:name]
+    pkgdelete uninstall_options.flatten.compact.join(' '), @resource[:name]
+  end
+
+  def purge
+    pkgdelete "-c", "-q", @resource[:name]
   end
 end
