$OpenBSD: patch-examples_etc_puppet_fileserver_conf,v 1.3 2013/03/08 16:24:39 ajacoutot Exp $
--- examples/etc/puppet/fileserver.conf.orig	Fri Mar  8 17:23:12 2013
+++ examples/etc/puppet/fileserver.conf	Fri Mar  8 17:23:15 2013
@@ -1,12 +1,41 @@
+# fileserver.conf
 
-[dist]
-    path /dist
-    allow *.puppetlabs.com
+# Puppet automatically serves PLUGINS and FILES FROM MODULES: anything in
+# <module name>/files/<file name> is available to authenticated nodes at
+# puppet:///modules/<module name>/<file name>. You do not need to edit this
+# file to enable this.
 
-[plugins]
-    path /var/lib/puppet/plugins
-    allow *.puppetlabs.com
+# MOUNT POINTS
 
-[facts]
-    path /var/lib/puppet/facts
-    allow *.puppetlabs.com
+# If you need to serve files from a directory that is NOT in a module,
+# you must create a static mount point in this file:
+#
+# [extra_files]
+#   path /etc/puppet/files
+#   allow *
+#
+# In the example above, anything in /etc/puppet/files/<file name> would be
+# available to authenticated nodes at puppet:///extra_files/<file name>.
+#
+# Mount points may also use three placeholders as part of their path:
+#
+# %H - The node's certname.
+# %h - The portion of the node's certname before the first dot. (Usually the
+#      node's short hostname.)
+# %d - The portion of the node's certname after the first dot. (Usually the
+#      node's domain name.)
+
+# PERMISSIONS
+
+# Every static mount point should have an `allow *` line; setting more
+# granular permissions in this file is deprecated. Instead, you can
+# control file access in auth.conf by controlling the
+# /file_metadata/<mount point> and /file_content/<mount point> paths:
+#
+# path ~ ^/file_(metadata|content)/extra_files/
+# auth yes
+# allow /^(.+)\.example\.com$/
+# allow_ip 192.168.100.0/24
+#
+# If added to auth.conf BEFORE the "path /file" rule, the rule above
+# will add stricter restrictions to the extra_files mount point.
