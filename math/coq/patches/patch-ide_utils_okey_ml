$OpenBSD: patch-ide_utils_okey_ml,v 1.1 2013/01/04 11:07:29 chrisz Exp $
--- ide/utils/okey.ml.orig	Mon Oct 15 21:03:31 2012
+++ ide/utils/okey.ml	Mon Oct 15 21:41:25 2012
@@ -30,23 +30,29 @@ type handler = {
     cback : (unit -> unit) ;
   }
 
-type handler_spec = int * int * Gdk.keysym
+type handler_spec = int32 * int32 * Gdk.keysym
       (** mods * mask * key *)
 
-let int_of_modifier = function
-    `SHIFT -> 1
-  | `LOCK -> 2
-  | `CONTROL -> 4
-  | `MOD1 -> 8
-  | `MOD2 -> 16
-  | `MOD3 -> 32
-  | `MOD4 -> 64
-  | `MOD5 -> 128
-  | `BUTTON1 -> 256
-  | `BUTTON2 -> 512
-  | `BUTTON3 -> 1024
-  | `BUTTON4 -> 2048
-  | `BUTTON5 -> 4096
+let int_of_modifier =
+  let power2 = Int32.shift_left 1l in
+  function
+    `SHIFT -> power2 0
+  | `LOCK -> power2 1
+  | `CONTROL -> power2 2
+  | `MOD1 -> power2 3
+  | `MOD2 -> power2 4
+  | `MOD3 -> power2 5
+  | `MOD4 -> power2 6
+  | `MOD5 -> power2 7
+  | `BUTTON1 -> power2 8
+  | `BUTTON2 -> power2 9
+  | `BUTTON3 -> power2 10
+  | `BUTTON4 -> power2 11
+  | `BUTTON5 -> power2 12
+  | `SUPER -> power2 26
+  | `HYPER -> power2 27
+  | `META -> power2 28
+  | `RELEASE -> power2 30
 
 let print_modifier l =
   List.iter
@@ -72,13 +78,13 @@ let print_modifier l =
   print_newline ()
 
 let int_of_modifiers l =
-  List.fold_left (fun acc -> fun m -> acc + (int_of_modifier m)) 0 l
+  List.fold_left (fun acc -> fun m -> Int32.add acc (int_of_modifier m)) 0l l
 
 module H =
   struct
     type t = handler_spec * handler
     let equal (m,k) (mods, mask, key) =
-      (k = key) && ((m land mask) = mods)
+      (k = key) && (( Int32.logand m mask) = mods)
 
     let filter_with_mask mods mask key l =
       List.filter (fun a -> (fst a) <> (mods, mask, key)) l
@@ -149,7 +155,7 @@ let add1 ?(remove=false) w
       r
   in
   let n_mods = int_of_modifiers mods in
-  let n_mask = lnot (int_of_modifiers mask) in
+  let n_mask = Int32.lognot (int_of_modifiers mask) in
   let new_h = { cond = cond ; cback = callback } in
   if remove then
     (
