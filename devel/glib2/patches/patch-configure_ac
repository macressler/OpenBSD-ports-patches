$OpenBSD: patch-configure_ac,v 1.8 2013/08/28 10:02:53 ajacoutot Exp $

From 996edb0c46356d8a326f886b91a77a6af9a2de3e Mon Sep 17 00:00:00 2001
From: Antoine Jacoutot <antoine@mtier.org>
Date: Wed, 28 Aug 2013 07:35:27 +0000
Subject: fix atomic ops detection

--- configure.ac.orig	Thu Aug 15 10:52:31 2013
+++ configure.ac	Thu Aug 15 10:53:46 2013
@@ -2390,7 +2390,7 @@ AC_CACHE_CHECK([for lock-free atomic intrinsics], glib
       glib_cv_g_atomic_lock_free=yes
       ;;
     *)
-      AC_TRY_COMPILE([],
+      AC_TRY_LINK([],
                      [volatile int atomic = 2;\
                       __sync_bool_compare_and_swap (&atomic, 2, 3);],
                      [glib_cv_g_atomic_lock_free=yes],
@@ -2398,7 +2398,7 @@ AC_CACHE_CHECK([for lock-free atomic intrinsics], glib
       if test "$glib_cv_g_atomic_lock_free" = "no"; then
         SAVE_CFLAGS="${CFLAGS}"
         CFLAGS="-march=i486"
-        AC_TRY_COMPILE([],
+        AC_TRY_LINK([],
                        [volatile int atomic = 2;\
                         __sync_bool_compare_and_swap (&atomic, 2, 3);],
                        [AC_MSG_ERROR([GLib must be build with -march=i486 or later.])],
@@ -2416,7 +2416,7 @@ case $host in
     # Some compilers support atomic operations but do not define
     # __GCC_HAVE_SYNC_COMPARE_AND_SWAP_4, like clang
     if test x"$glib_cv_g_atomic_lock_free" = xyes; then
-      AC_TRY_COMPILE([],
+      AC_TRY_LINK([],
                      [__GCC_HAVE_SYNC_COMPARE_AND_SWAP_4;],
                      [],
                      [AC_DEFINE(__GCC_HAVE_SYNC_COMPARE_AND_SWAP_4, 1, [ compiler supports atomic operations])])
