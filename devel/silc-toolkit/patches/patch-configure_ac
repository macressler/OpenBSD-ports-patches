$OpenBSD: patch-configure_ac,v 1.6 2013/11/04 21:49:48 brad Exp $
--- configure.ac.orig	Fri Aug  7 07:51:30 2009
+++ configure.ac	Sun Nov  3 21:03:11 2013
@@ -97,9 +97,6 @@ AM_CONDITIONAL(SILC_X86_64, test x$cpu_x86_64 = xtrue)
 AM_CONDITIONAL(SILC_POWERPC, test x$cpu_ppc = xtrue)
 AM_CONDITIONAL(SILC_IA64, test x$cpu_ia64 = xtrue)
 
-# Control compiler optimizations
-CFLAGS=`echo $CFLAGS | sed 's/-O[ 0123456789s]*//g'`
-
 AC_PROG_CC
 AC_C_INLINE
 AC_C_CONST
@@ -490,59 +487,9 @@ fi
 ## Compiler and compiler flag checks
 ##
 
-if test "$GCC"; then
-  # GCC specific options
-  if test "x$summary_debug" = "xyes"; then
-    SILC_ADD_CFLAGS(-g)
-  else
-    SILC_ADD_CFLAGS(-g)
-  fi
-  SILC_ADD_CFLAGS(-Wall -finline-functions)
-  SILC_ADD_CFLAGS(-Wno-pointer-sign)
-else
-  # Other compilers
-  case "$target" in
-    alpha*-dec-osf*)
-      SILC_ADD_CFLAGS(-g3)
-      ;;
-    mips*-sgi-irix*)
-      SILC_ADD_CFLAGS(-g3)
-      ;;
-    *)
-      SILC_ADD_CFLAGS(-g)
-      ;;
-  esac
+SILC_ADD_CFLAGS(-Wall -finline-functions)
+SILC_ADD_CFLAGS(-Wno-pointer-sign)
 
-  # Intel C++ Compiler needs -restrict
-  if test "x$CC" = "xicc"; then
-    SILC_ADD_CFLAGS(-restrict)
-  fi
-fi
-
-if test x$want_cc_optimizations = xtrue; then
-  if test "$GCC"; then
-    # GCC specific options
-    if test "x$summary_debug" = "xyes"; then
-      SILC_ADD_CFLAGS(-O)
-    else
-      SILC_ADD_CFLAGS(-O2)
-    fi
-  else
-    # Other compilers
-    case "$target" in
-      alpha*-dec-osf*)
-        SILC_ADD_CFLAGS(-O2, SILC_ADD_CFLAGS(-O))
-        ;;
-      mips*-sgi-irix*)
-        SILC_ADD_CFLAGS(-O2, SILC_ADD_CFLAGS(-O))
-        ;;
-      *)
-        SILC_ADD_CFLAGS(-O2, SILC_ADD_CFLAGS(-O))
-        ;;
-    esac
-  fi
-fi
-
 #
 # Workaround a bug in GCC 2.x which causes memory exhaustion
 # when compiling sha1 with optimizations on UltraSPARC.
@@ -1294,7 +1241,7 @@ fi
 
 SILC_ADD_CC_FLAGS(SILC_CRYPTO, -fno-regmove)
 if test x$summary_debug = xno -a x$want_cc_optimizations = xtrue; then
-  SILC_ADD_CC_FLAGS(SILC_CRYPTO, -fomit-frame-pointer -O3)
+  SILC_ADD_CC_FLAGS(SILC_CRYPTO, -fomit-frame-pointer)
 fi
 
 AC_SUBST(SILC_CRYPTO_CFLAGS)
@@ -1330,7 +1277,6 @@ if test x$compile_libs = xtrue; then
 AC_MSG_NOTICE([configuring math library])
 
 if test x$want_cc_optimizations = xtrue; then
-  SILC_ADD_CC_FLAGS(MATH, -O3, SILC_ADD_CC_FLAGS(MATH, -O2))
   SILC_ADD_CC_FLAGS(MATH, -funroll-all-loops)
 fi
 if test x$enable_stack_trace != xyes; then
