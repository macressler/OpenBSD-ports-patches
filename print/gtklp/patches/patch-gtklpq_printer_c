$OpenBSD: patch-gtklpq_printer_c,v 1.1 2012/08/15 13:22:29 ajacoutot Exp $

Fix build with cups >= 1.6.0

--- gtklpq/printer.c.orig	Wed Aug 15 14:53:06 2012
+++ gtklpq/printer.c	Wed Aug 15 15:10:27 2012
@@ -345,8 +345,8 @@ void printerStatus (char *URI)
 	}
 
   request = ippNew ();
-  request->request.op.operation_id = IPP_GET_PRINTER_ATTRIBUTES;
-  request->request.op.request_id = 1;
+  ippSetOperation(request, IPP_GET_PRINTER_ATTRIBUTES);
+  ippSetRequestId(request, 1);
   ippAddString (request, IPP_TAG_OPERATION, IPP_TAG_CHARSET,
 		"attributes-charset", NULL, cupsLangEncoding (cupsLanguage));
   ippAddString (request, IPP_TAG_OPERATION, IPP_TAG_LANGUAGE,
@@ -360,7 +360,7 @@ void printerStatus (char *URI)
 	  != NULL)
 	{
 		aktPrinterHold=0;
-	  switch (attr->values[0].integer)
+	  switch (ippGetInteger (attr, 0))
 	    {
 	    case IPP_PRINTER_IDLE:
 	      strncpy (toolstring, str2str(_("Printer Idle")),(size_t)MAXLINE);
@@ -373,17 +373,17 @@ void printerStatus (char *URI)
 				aktPrinterHold=1;
 	      break;
 	    default:
-	      snprintf (toolstring, (size_t)MAXLINE, "%i", attr->values[0].integer);
+	      snprintf (toolstring, (size_t)MAXLINE, "%i", ippGetInteger (attr, 0));
 	      break;
 	    }
 
 		jobsRejected=0;
 		attr = ippFindAttribute (response, "printer-is-accepting-jobs", IPP_TAG_ZERO);
 		if(attr != NULL) {
-			if(attr->values[0].integer == 0)
+			if(ippGetInteger (attr, 0) == 0)
 				jobsRejected=1;
 			if(DEBUG)
-				printf("Attr=%s: %i\n",attr->name,attr->values[0].integer);
+				printf("Attr=%s: %i\n",ippGetInteger (attr, 0));
 		}
 
 		if(nox == 0) {
@@ -429,8 +429,8 @@ void printerStatus (char *URI)
 
   if ( (attr = ippFindAttribute (response, "printer-state-message", IPP_TAG_ZERO)) != NULL)
 	{
-		if ((strlen (toolstring) + strlen (attr->values[0].string.text)) < MAXLINE)
-	  	snprintf (toolstring, (size_t)MAXLINE, "%s - %s", toolstring, attr->values[0].string.text);
+		if ((strlen (toolstring) + strlen (ippGetString (attr, 0, NULL))) < MAXLINE)
+	  	snprintf (toolstring, (size_t)MAXLINE, "%s - %s", toolstring, ippGetString (attr, 0, NULL));
 		}
 		if(nox == 0)
       m_id_state = gtk_statusbar_push ((GtkStatusbar *) statbar, c_id_state, (const char *) str2str(toolstring));
@@ -522,7 +522,7 @@ int printQueueUpdate (GtkWidget * widget, gpointer dat
   //request = ippNew ();
   //request->request.op.operation_id = IPP_GET_JOBS;
   request = ippNewRequest(IPP_GET_JOBS);
-  request->request.op.request_id = 1;
+  ippSetRequestId(request, 1);
 
 
   language = cupsLangDefault ();
@@ -568,12 +568,12 @@ int printQueueUpdate (GtkWidget * widget, gpointer dat
 
   if ((response = cupsDoRequest (cupsHttp, request, "/")) != NULL)
     {
-      if (response->request.status.status_code > IPP_OK_CONFLICT)
+      if (ippGetStatusCode(response) > IPP_OK_CONFLICT)
 	{
 		if(nox == 0)
-		  m_id_upd = gtk_statusbar_push ((GtkStatusbar *) statbar, c_id_upd, str2str((char *)ippErrorString(response->request.status.status_code)));
+		  m_id_upd = gtk_statusbar_push ((GtkStatusbar *) statbar, c_id_upd, str2str((char *)ippErrorString(ippGetStatusCode(response))));
 		else
-			g_print("[%s] %s: %s\n\n",PrinterNames[PrinterChoice], str2str(_("Error")),ippErrorString (response->request.status.status_code));
+			g_print("[%s] %s: %s\n\n",PrinterNames[PrinterChoice], str2str(_("Error")),ippErrorString (ippGetStatusCode(response)));
 	  ippDelete (response);
 	  return(FALSE);
 	}
@@ -642,10 +642,10 @@ int printQueueUpdate (GtkWidget * widget, gpointer dat
 		}
 
       rank = 1;
-      for (attr = response->attrs; attr != NULL; attr = attr->next)
+      for (attr = ippFirstAttribute (response); attr != NULL; attr = ippNextAttribute (response))
 	{
-	  while (attr != NULL && attr->group_tag != IPP_TAG_JOB) 
-	    attr = attr->next;
+	  while (attr != NULL && ippGetGroupTag (attr) != IPP_TAG_JOB) 
+	    ippNextAttribute (response);
 
 	  if (attr == NULL)
 	    break;
@@ -658,39 +658,39 @@ int printQueueUpdate (GtkWidget * widget, gpointer dat
 	  jobdest = NULL;
 	  jobcopies = 1;
 
-	  while (attr != NULL && attr->group_tag == IPP_TAG_JOB)
+	  while (attr != NULL && ippGetGroupTag (attr) == IPP_TAG_JOB)
 	    {
-	      if (strcmp (attr->name, "job-id") == 0 &&
-		  attr->value_tag == IPP_TAG_INTEGER)
-		jobid = attr->values[0].integer;
+	      if (strcmp (ippGetName (attr), "job-id") == 0 &&
+		  ippGetValueTag (attr) == IPP_TAG_INTEGER)
+		jobid = ippGetInteger (attr, 0);
 
-	      if (strcmp (attr->name, "job-k-octets") == 0 &&
-		  attr->value_tag == IPP_TAG_INTEGER)
-		jobsize = attr->values[0].integer * 1024;
+	      if (strcmp (ippGetName (attr), "job-k-octets") == 0 &&
+		  ippGetValueTag (attr) == IPP_TAG_INTEGER)
+		jobsize = ippGetInteger (attr, 0) * 1024;
 
-	      if (strcmp (attr->name, "job-state") == 0 &&
-		  attr->value_tag == IPP_TAG_ENUM)
-		jobstate = (ipp_jstate_t) attr->values[0].integer;
+	      if (strcmp (ippGetName (attr), "job-state") == 0 &&
+		  ippGetValueTag (attr) == IPP_TAG_ENUM)
+		jobstate = (ipp_jstate_t) ippGetInteger (attr, 0);
 
-	      if (strcmp (attr->name, "job-printer-uri") == 0 &&
-		  attr->value_tag == IPP_TAG_URI)
-		if ((jobdest = strrchr (attr->values[0].string.text, '/')) !=
+	      if (strcmp (ippGetName (attr), "job-printer-uri") == 0 &&
+		  ippGetValueTag (attr) == IPP_TAG_URI)
+		if ((jobdest = strrchr (ippGetString (attr, 0, NULL), '/')) !=
 		    NULL)
 		  jobdest++;
 
-	      if (strcmp (attr->name, "job-originating-user-name") == 0 &&
-		  attr->value_tag == IPP_TAG_NAME)
-		jobuser = attr->values[0].string.text;
+	      if (strcmp (ippGetName (attr), "job-originating-user-name") == 0 &&
+		  ippGetValueTag (attr) == IPP_TAG_NAME)
+		jobuser = ippGetString (attr, 0, NULL);
 
-	      if (strcmp (attr->name, "job-name") == 0 &&
-		  attr->value_tag == IPP_TAG_NAME)
-		jobname = attr->values[0].string.text;
+	      if (strcmp (ippGetName (attr), "job-name") == 0 &&
+		  ippGetValueTag (attr) == IPP_TAG_NAME)
+		jobname = ippGetString (attr, 0, NULL);
 
-	      if (strcmp (attr->name, "copies") == 0 &&
-		  attr->value_tag == IPP_TAG_INTEGER)
-		jobcopies = attr->values[0].integer;
+	      if (strcmp (ippGetName (attr), "copies") == 0 &&
+		  ippGetValueTag (attr) == IPP_TAG_INTEGER)
+		jobcopies = ippGetInteger (attr, 0);
 
-	      attr = attr->next;
+	      attr = ippNextAttribute (response);
 	    }
 
 	  if (jobdest == NULL || jobid == 0)
@@ -1098,8 +1098,8 @@ int jobAttr(int job_id, int num_options, cups_option_t
 	cups_lang_t *language;
 
 	request = ippNew();
-	request->request.op.operation_id = IPP_SET_JOB_ATTRIBUTES;
-	request->request.op.request_id   = 1;
+	ippSetOperation(request, IPP_SET_JOB_ATTRIBUTES);
+	ippSetRequestId(request, 1);
 
 	language = cupsLangDefault ();
 	
@@ -1129,10 +1129,10 @@ int jobAttr(int job_id, int num_options, cups_option_t
 	
 	if ((response = cupsDoRequest(cupsHttp, request, "/jobs")) != NULL)
 	{
-		if (response->request.status.status_code > IPP_OK_CONFLICT)
+		if (ippGetStatusCode (response) > IPP_OK_CONFLICT)
 		{
 			if(DEBUG)
-				printf("set-job-attributes failed(1): %s\n",ippErrorString(response->request.status.status_code));
+				printf("set-job-attributes failed(1): %s\n",ippErrorString(ippGetStatusCode (response)));
 			quick_message(str2str(_("Unable to change priority!")),2);
 			ippDelete(response);
 			return (1);
@@ -1254,8 +1254,8 @@ void cancelJob (GtkWidget * dialog)
 		gtk_widget_destroy (dialog);
 	
 	request = ippNew ();
-	request->request.op.operation_id = op;
-	request->request.op.request_id = 1;
+	ippSetOperation(request, op);
+	ippSetRequestId(request, 1);
 	language = cupsLangDefault ();
 	ippAddString (request, IPP_TAG_OPERATION, IPP_TAG_CHARSET,
 		      "attributes-charset", NULL,
@@ -1329,7 +1329,7 @@ void cancelJob (GtkWidget * dialog)
 
 	if (response != NULL)
 	  {
-	    switch (response->request.status.status_code)
+	    switch (ippGetStatusCode (response))
 	      {
 	      case IPP_NOT_FOUND:
 					quick_message(str2str(_("Job or printer not found!")),2);
@@ -1341,7 +1341,7 @@ void cancelJob (GtkWidget * dialog)
 					quick_message(str2str(_("You don't own this job!")),2);
 		break;
 	      default:
-		if (response->request.status.status_code > IPP_OK_CONFLICT)
+		if (ippGetStatusCode (response) > IPP_OK_CONFLICT)
 					quick_message(str2str(_("Unable to do so!")),2);
 		break;
 	      }
