$OpenBSD: patch-base_utils_py,v 1.11 2013/08/06 19:13:37 ajacoutot Exp $
--- base/utils.py.orig	Tue Jul 23 07:18:29 2013
+++ base/utils.py	Fri Jul 26 16:07:33 2013
@@ -575,7 +575,7 @@ class UserSettings(object): # Note: Deprecated after 2
         if len(path):
             self.cmd_pcard = 'hp-unload -d %DEVICE_URI%'
         else:
-            self.cmd_pcard = 'python %HOME%/unload.py -d %DEVICE_URI%'
+            self.cmd_pcard = '${MODPY_BIN} %HOME%/unload.py -d %DEVICE_URI%'
 
         # Copy
         path = which('hp-makecopies')
@@ -583,7 +583,7 @@ class UserSettings(object): # Note: Deprecated after 2
         if len(path):
             self.cmd_copy = 'hp-makecopies -d %DEVICE_URI%'
         else:
-            self.cmd_copy = 'python %HOME%/makecopies.py -d %DEVICE_URI%'
+            self.cmd_copy = '${MODPY_BIN} %HOME%/makecopies.py -d %DEVICE_URI%'
 
         # Fax
         path = which('hp-sendfax')
@@ -591,7 +591,7 @@ class UserSettings(object): # Note: Deprecated after 2
         if len(path):
             self.cmd_fax = 'hp-sendfax -d %FAX_URI%'
         else:
-            self.cmd_fax = 'python %HOME%/sendfax.py -d %FAX_URI%'
+            self.cmd_fax = '${MODPY_BIN} %HOME%/sendfax.py -d %FAX_URI%'
 
         # Fax Address Book
         path = which('hp-fab')
@@ -599,7 +599,7 @@ class UserSettings(object): # Note: Deprecated after 2
         if len(path):
             self.cmd_fab = 'hp-fab'
         else:
-            self.cmd_fab = 'python %HOME%/fab.py'
+            self.cmd_fab = '${MODPY_BIN} %HOME%/fab.py'
 
     def load(self):
         self.loadDefaults()
@@ -931,10 +931,9 @@ def all(S,f=lambda x:x):
         if not f(x): return False
     return True
 
-BROWSERS = ['firefox', 'mozilla', 'konqueror', 'epiphany', 'skipstone'] # in preferred order
-BROWSER_OPTS = {'firefox': '-new-tab', 'mozilla': '', 'konqueror': '', 'epiphany': '--new-tab', 'skipstone': ''}
+BROWSERS = ['xdg-open']
+BROWSER_OPTS = {'xdg-open' : ''}
 
-
 def find_browser():
     if platform_avail and platform.system() == 'Darwin':
         return "open"
@@ -2071,7 +2070,7 @@ def check_user_groups(required_grps_str, avl_grps):
         grps =re.sub(r'\s', '', str(grps))
         exp_grp_list = grps.split(',')
     else:
-        exp_grp_list.append('lp')
+        exp_grp_list.append('_cups')
 
     log.debug("Requied groups list =[%s]"%exp_grp_list)
 
