$OpenBSD: patch-modules_dav_fs_repos_c,v 1.1 2013/10/17 14:05:41 stsp Exp $
https://issues.apache.org/bugzilla/show_bug.cgi?id=55397
http://svn.apache.org/viewvc?view=revision&revision=1529559
http://svn.apache.org/viewvc?view=revision&revision=1531505
--- modules/dav/fs/repos.c.orig	Thu Oct 17 12:08:37 2013
+++ modules/dav/fs/repos.c	Thu Oct 17 12:09:41 2013
@@ -1406,6 +1406,18 @@ static dav_error * dav_fs_remove_resource(dav_resource
     return dav_fs_deleteset(info->pool, resource);
 }
 
+/* Take an unescaped path component and escape it and append it onto a
+ * dav_buffer for a URI */
+static apr_size_t dav_fs_append_uri(apr_pool_t *p, dav_buffer *pbuf,
+                                    const char *path, apr_size_t pad)
+{
+    const char *epath = ap_escape_uri(p, path);
+    apr_size_t epath_len = strlen(epath);
+
+    dav_buffer_place_mem(p, pbuf, epath, epath_len + 1, pad);
+    return epath_len;
+}
+
 /* ### move this to dav_util? */
 /* Walk recursively down through directories, *
  * including lock-null resources as we go.    */
@@ -1460,6 +1472,7 @@ static dav_error * dav_fs_walker(dav_fs_walker_context
     }
     while ((apr_dir_read(&dirent, APR_FINFO_DIRENT, dirp)) == APR_SUCCESS) {
         apr_size_t len;
+        apr_size_t escaped_len;
         apr_status_t status;
 
         len = strlen(dirent.name);
@@ -1499,7 +1512,7 @@ static dav_error * dav_fs_walker(dav_fs_walker_context
 
         /* copy the file to the URI, too. NOTE: we will pad an extra byte
            for the trailing slash later. */
-        dav_buffer_place_mem(pool, &fsctx->uri_buf, dirent.name, len + 1, 1);
+        escaped_len = dav_fs_append_uri(pool, &fsctx->uri_buf, dirent.name, 1);
 
         /* if there is a secondary path, then do that, too */
         if (fsctx->path2.buf != NULL) {
@@ -1532,7 +1545,7 @@ static dav_error * dav_fs_walker(dav_fs_walker_context
             fsctx->path2.cur_len += len;
 
             /* adjust URI length to incorporate subdir and a slash */
-            fsctx->uri_buf.cur_len += len + 1;
+            fsctx->uri_buf.cur_len += escaped_len + 1;
             fsctx->uri_buf.buf[fsctx->uri_buf.cur_len - 1] = '/';
             fsctx->uri_buf.buf[fsctx->uri_buf.cur_len] = '\0';
 
@@ -1598,8 +1611,8 @@ static dav_error * dav_fs_walker(dav_fs_walker_context
             */
             dav_buffer_place_mem(pool, &fsctx->path1,
                                  fsctx->locknull_buf.buf + offset, len + 1, 0);
-            dav_buffer_place_mem(pool, &fsctx->uri_buf,
-                                 fsctx->locknull_buf.buf + offset, len + 1, 0);
+            dav_fs_append_uri(pool, &fsctx->uri_buf,
+                              fsctx->locknull_buf.buf + offset, 0);
             if (fsctx->path2.buf != NULL) {
                 dav_buffer_place_mem(pool, &fsctx->path2,
                                      fsctx->locknull_buf.buf + offset,
