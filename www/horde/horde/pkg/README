$OpenBSD $

+-----------------------------------------------------------------------
| Running ${FULLPKGNAME} on OpenBSD
+-----------------------------------------------------------------------

The Horde application framework has been installed into ${PREFIX}/${INSTDIR}.
Configure a new virtual host to serve the documents from here, or symlink
it into the DocumentRoot of your web-server, e.g.

   # ln -s ../horde /var/www/htdocs/horde

Ensure that the required PHP extensions are activated (with symlinks
in /etc/php-${MODPHP_VERSION} pointing to the sample files in php-${MODPHP_VERSION}.sample,
as directed by the installation messages for the PHP extensions)
and that the web server has been restarted.

Then follow the steps in the Configuring Horde and Securing Horde
sections of ${PREFIX}/${INSTDIR}/docs/INSTALL and ensure that you have a
working installation by accessing http://<localhost>/horde/test.php.
Now you can configure Horde-based applications (IMP, etc) by following
their individual guide in ${PREFIX}/${INSTDIR}/<module>/docs/INSTALL.

Sample configuration for nginx with SSL and php-fpm
===================================================

server {
	listen			443 default ssl;
	server_name		mail.example.com;
	root			/var/www/htdocs;
	index			index.php;

	client_max_body_size	20M;
	
	ssl_certificate		/etc/ssl/nginx_httpd.crt;
	ssl_certificate_key	/etc/ssl/private/nginx_httpd.key;
	
	ssl_session_timeout	5m;
	
	ssl_protocols		SSLv3 TLSv1;
	ssl_ciphers		HIGH:!aNULL:!MD5;
	ssl_prefer_server_ciphers on;

	location ^~ /(config\/|lib\/|locale\/|po\/|scripts\/|templates\/|kronolith\/feed\/) {
		deny all;
	}
	
	location /horde/rpc {
		try_files $uri $uri/ @rpc;
	}

	location ~ \.php$ {
		include		fastcgi_params;
		fastcgi_index	index.php;
		fastcgi_param	HTTPS on;
		fastcgi_pass	unix:run/php-fpm.sock;
		fastcgi_send_timeout 1800;
		fastcgi_read_timeout 1800;
		fastcgi_connect_timeout 1800;
		fastcgi_param SSL_PROTOCOL	$ssl_protocol;
		fastcgi_param SSL_CIPHER	$ssl_cipher;
		fastcgi_param SSL_SESSION_ID	$ssl_session_id;
		fastcgi_param SSL_CLIENT_VERIFY	$ssl_client_verify;
	}

	location @rpc {
		fastcgi_split_path_info ^(.+\.php)(/.+)$;
		include		fastcgi_params;
		fastcgi_param	HTTPS on;
		fastcgi_index	index.php;
		fastcgi_pass	unix:run/php-fpm.sock;
		fastcgi_send_timeout 1800;
		fastcgi_read_timeout 1800;
		fastcgi_connect_timeout 1800;
	}

	access_log	/var/www/logs/mail.example.com-access.log combined;
	error_log	/var/www/logs/mail.example.com-error.log;

	location ~* ^.+.(jpe?g|gif|png|ico|css|zip|tgz|gz|rar|bz2|doc|xls|exe|pdf|ppt|txt|tar|mid|midi|wav|bmp|rtf|js|swf|avi|mp3)$ {
		expires 30d;
	}
}
