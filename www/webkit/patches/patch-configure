$OpenBSD: patch-configure,v 1.17 2013/10/06 14:03:44 landry Exp $

https://bugs.webkit.org/show_bug.cgi?id=117796

- Chunk 1, 2 & 4 : https://bugs.webkit.org/show_bug.cgi?id=109932
Only webkit2 requires c++11 features atm, so let's relax the check until we have webkit2

- Chunk 5 : no librt on OpenBSD

- Chunk 3 : GNOME Bug 627126 - gsettings schema files don't get installed on FreeBSD
glib commit 136e705e8383ff8848e425ac01278102d7badc52

- Chunk 6 : Don't force the use of -O2, the ports infrastructure
takes care of that

--- configure.orig	Fri Sep 27 11:19:49 2013
+++ configure	Thu Oct  3 21:19:34 2013
@@ -4789,7 +4789,7 @@ ac_compiler_gnu=$ac_cv_c_compiler_gnu
 cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
 
-#if !(defined(__GNUC__) && !defined(__clang__) && !defined(__INTEL_COMPILER) && __GNUC__ >= 4 && __GNUC_MINOR__ >= 7)
+#if !(defined(__GNUC__) && !defined(__clang__) && !defined(__INTEL_COMPILER) && __GNUC__ >= 4 && __GNUC_MINOR__ >= 2)
 #error Not a supported GCC compiler
 #endif
 
@@ -4847,7 +4847,7 @@ ac_compiler_gnu=$ac_cv_cxx_compiler_gnu
 cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
 
-#if !(defined(__GNUG__) && defined(__GNUC__) && !defined(__clang__) && !defined(__INTEL_COMPILER) && __GNUC__ >= 4 && __GNUC_MINOR__ >= 7)
+#if !(defined(__GNUG__) && defined(__GNUC__) && !defined(__clang__) && !defined(__INTEL_COMPILER) && __GNUC__ >= 4 && __GNUC_MINOR__ >= 2)
 #error Not a supported G++ compiler
 #endif
 
@@ -17608,26 +17608,14 @@ gsettings__enum_file = $(addsuffix .enums.xml,$(gsetti
 
 all-am: $(gsettings_SCHEMAS:.xml=.valid)
 uninstall-am: uninstall-gsettings-schemas
-install-data-am: install-gsettings-schemas
+install-data-am:
 
 .SECONDARY: $(gsettings_SCHEMAS)
 
-gsettings__base_list = \
-  sed "$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g" | \
-  sed "$$!N;$$!N;$$!N;$$!N;s/\n/ /g"
-
-install-gsettings-schemas: $(gsettings_SCHEMAS:.xml=.valid) $(gsettings__enum_file)
+install-gsettings-schemas: $(gsettings_SCHEMAS) $(gsettings__enum_file)
 	@$(NORMAL_INSTALL)
 	test -z "$(gsettingsschemadir)" || $(MKDIR_P) "$(DESTDIR)$(gsettingsschemadir)"
-	@list='\''$(gsettings__enum_file) $(gsettings_SCHEMAS)'\''; test -n "$(gsettingsschemadir)" || list=; \
-	for p in $$list; do \
-	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
-	  echo "$$d$$p"; \
-	done | $(gsettings__base_list) | \
-	while read files; do \
-	  echo " $(INSTALL_DATA) $$files '\''$(DESTDIR)$(gsettingsschemadir)'\''"; \
-	  $(INSTALL_DATA) $$files "$(DESTDIR)$(gsettingsschemadir)" || exit $$?; \
-	done
+	$(INSTALL_DATA) $^ "$(DESTDIR)$(gsettingsschemadir)"
 	test -n "$(GSETTINGS_DISABLE_SCHEMAS_COMPILE)$(DESTDIR)" || $(GLIB_COMPILE_SCHEMAS) $(gsettingsschemadir)
 
 uninstall-gsettings-schemas:
@@ -20953,7 +20941,7 @@ $as_echo "$ac_cv_search_shm_open" >&6; }
 ac_res=$ac_cv_search_shm_open
 if test "$ac_res" != no; then :
   test "$ac_res" = "none required" || LIBS="$ac_res $LIBS"
-  SHM_LIBS="-lrt"
+  SHM_LIBS=""
 fi
 
 
@@ -21368,7 +21356,7 @@ fi
 # Use C99 as the language standard for C code.
 CFLAGS="$CFLAGS -pthread -std=c99"
 # Use the C++11 standard. Do not warn about C++11 incompatibilities.
-CXXFLAGS="$CXXFLAGS -pthread -std=c++11 -Wno-c++11-compat"
+#CXXFLAGS="$CXXFLAGS -pthread -std=c++11 -Wno-c++11-compat"
 
 # Clang requires suppression of unused arguments warnings.
 if test "$c_compiler" = "clang"; then
@@ -21405,8 +21393,8 @@ fi
 
 # Add the appropriate 'O' level for optimized builds.
 if test "$enable_optimizations" = "yes"; then
-    CXXFLAGS="$CXXFLAGS -O2"
-    CFLAGS="$CFLAGS -O2"
+    CXXFLAGS="$CXXFLAGS"
+    CFLAGS="$CFLAGS"
 else
     CXXFLAGS="$CXXFLAGS -O0"
     CFLAGS="$CFLAGS -O0"
