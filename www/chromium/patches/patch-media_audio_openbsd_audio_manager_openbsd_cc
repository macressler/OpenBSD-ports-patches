$OpenBSD: patch-media_audio_openbsd_audio_manager_openbsd_cc,v 1.6 2011/10/27 07:59:09 robert Exp $
--- media/audio/openbsd/audio_manager_openbsd.cc.orig	Wed Oct 26 20:55:10 2011
+++ media/audio/openbsd/audio_manager_openbsd.cc	Wed Oct 26 20:56:56 2011
@@ -4,14 +4,17 @@
 
 #include "media/audio/openbsd/audio_manager_openbsd.h"
 
-#include "base/logging.h"
+#include "base/sys_info.h"
+#include "media/audio/fake_audio_input_stream.h"
+#include "media/audio/fake_audio_output_stream.h"
+#include "media/audio/openbsd/audio_manager_openbsd.h"
+#include "media/audio/openbsd/sndio_output.h"
+#include "media/base/limits.h"
+#include "media/base/limits.h"
 
-static AudioManagerOpenBSD* g_audio_manager = NULL;
-
 // Implementation of AudioManager.
 bool AudioManagerOpenBSD::HasAudioOutputDevices() {
-  NOTIMPLEMENTED();
-  return false;
+  return true;
 }
 
 bool AudioManagerOpenBSD::HasAudioInputDevices() {
@@ -37,10 +40,6 @@ AudioManagerOpenBSD::AudioManagerOpenBSD() {
 AudioManagerOpenBSD::~AudioManagerOpenBSD() {
 }
 
-void AudioManagerOpenBSD::Init() {
-  AudioManagerBase::Init();
-}
-
 void AudioManagerOpenBSD::MuteAll() {
   NOTIMPLEMENTED();
 }
@@ -52,4 +51,16 @@ void AudioManagerOpenBSD::UnMuteAll() {
 // static
 AudioManager* AudioManager::CreateAudioManager() {
   return new AudioManagerOpenBSD();
+}
+
+// Called by the stream when it has been released by calling Close().
+void AudioManagerOpenBSD::ReleaseOutputStream(
+    PCMQueueOutAudioOutputStream* stream) {
+  DCHECK(stream);
+  delete stream;
+}
+
+// Called by the stream when it has been released by calling Close().
+void AudioManagerOpenBSD::ReleaseInputStream(PCMQueueInAudioInputStream* stream) {
+  NOTIMPLEMENTED();
 }
