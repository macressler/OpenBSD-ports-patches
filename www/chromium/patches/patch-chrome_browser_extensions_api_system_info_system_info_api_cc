$OpenBSD: patch-chrome_browser_extensions_api_system_info_system_info_api_cc,v 1.1 2013/05/30 18:42:18 robert Exp $
--- chrome/browser/extensions/api/system_info/system_info_api.cc.orig.port	Thu May 30 19:59:46 2013
+++ chrome/browser/extensions/api/system_info/system_info_api.cc	Thu May 30 20:01:00 2013
@@ -120,11 +120,15 @@ SystemInfoEventRouter* SystemInfoEventRouter::GetInsta
 }
 
 SystemInfoEventRouter::SystemInfoEventRouter() {
+#if !defined(OS_BSD)
   StorageInfoProvider::Get()->AddObserver(this);
+#endif
 }
 
 SystemInfoEventRouter::~SystemInfoEventRouter() {
+#if !defined(OS_BSD)
   StorageInfoProvider::Get()->RemoveObserver(this);
+#endif
 }
 
 void SystemInfoEventRouter::StartWatchingStorages(
@@ -133,9 +137,11 @@ void SystemInfoEventRouter::StartWatchingStorages(
   if (!success)
     return;
 
+#if !defined(OS_BSD)
   for (StorageInfo::const_iterator it = info.begin(); it != info.end(); ++it) {
     StorageInfoProvider::Get()->StartWatching((*it)->id);
   }
+#endif
 }
 
 void SystemInfoEventRouter::StopWatchingStorages(
@@ -144,9 +150,11 @@ void SystemInfoEventRouter::StopWatchingStorages(
   if (!success)
     return;
 
+#if !defined(OS_BSD)
   for (StorageInfo::const_iterator it = info.begin(); it != info.end(); ++it) {
     StorageInfoProvider::Get()->StopWatching((*it)->id);
   }
+#endif
 }
 
 void SystemInfoEventRouter::AddEventListener(const std::string& event_name) {
@@ -156,6 +164,7 @@ void SystemInfoEventRouter::AddEventListener(const std
   if (watching_event_set_.count(event_name) > 1)
     return;
 
+#if !defined(OS_BSD)
   // Start watching the |event_name| event if the first event listener arrives.
   // For systemInfo.storage event.
   if (IsAvailableCapacityChangedEvent(event_name)) {
@@ -164,6 +173,7 @@ void SystemInfoEventRouter::AddEventListener(const std
                    base::Unretained(this)));
     return;
   }
+#endif
 
   // For systemInfo.cpu event.
   if (IsCpuUpdatedEvent(event_name)) {
@@ -189,6 +199,7 @@ void SystemInfoEventRouter::RemoveEventListener(
   if (watching_event_set_.count(event_name) > 0)
     return;
 
+#if !defined(OS_BSD)
   // In case of the last event listener is removed, we need to stop watching
   // it to avoid unnecessary overhead.
   if (IsAvailableCapacityChangedEvent(event_name)) {
@@ -196,6 +207,7 @@ void SystemInfoEventRouter::RemoveEventListener(
         base::Bind(&SystemInfoEventRouter::StopWatchingStorages,
                    base::Unretained(this)));
   }
+#endif
 
   if (IsCpuUpdatedEvent(event_name)) {
     CpuInfoProvider::Get()->StopSampling();
