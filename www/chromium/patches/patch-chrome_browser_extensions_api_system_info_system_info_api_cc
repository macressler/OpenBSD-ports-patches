$OpenBSD: patch-chrome_browser_extensions_api_system_info_system_info_api_cc,v 1.2 2013/09/29 19:04:01 robert Exp $
--- chrome/browser/extensions/api/system_info/system_info_api.cc.orig.port	Wed Sep 18 10:13:32 2013
+++ chrome/browser/extensions/api/system_info/system_info_api.cc	Sun Sep 22 16:09:41 2013
@@ -109,11 +109,15 @@ SystemInfoEventRouter* SystemInfoEventRouter::GetInsta
 }
 
 SystemInfoEventRouter::SystemInfoEventRouter() {
+#if !defined(OS_BSD)
   StorageInfoProvider::Get()->AddObserver(this);
+#endif
 }
 
 SystemInfoEventRouter::~SystemInfoEventRouter() {
+#if !defined(OS_BSD)
   StorageInfoProvider::Get()->RemoveObserver(this);
+#endif
 }
 
 void SystemInfoEventRouter::StartWatchingStorages(
@@ -122,9 +126,11 @@ void SystemInfoEventRouter::StartWatchingStorages(
   if (!success)
     return;
 
+#if !defined(OS_BSD)
   for (StorageInfo::const_iterator it = info.begin(); it != info.end(); ++it) {
     StorageInfoProvider::Get()->StartWatching((*it)->id);
   }
+#endif
 }
 
 void SystemInfoEventRouter::StopWatchingStorages(
@@ -133,9 +139,11 @@ void SystemInfoEventRouter::StopWatchingStorages(
   if (!success)
     return;
 
+#if !defined(OS_BSD)
   for (StorageInfo::const_iterator it = info.begin(); it != info.end(); ++it) {
     StorageInfoProvider::Get()->StopWatching((*it)->id);
   }
+#endif
 }
 
 void SystemInfoEventRouter::AddEventListener(const std::string& event_name) {
@@ -145,6 +153,7 @@ void SystemInfoEventRouter::AddEventListener(const std
   if (watching_event_set_.count(event_name) > 1)
     return;
 
+#if !defined(OS_BSD)
   // Start watching the |event_name| event if the first event listener arrives.
   // For systemInfo.storage event.
   if (IsAvailableCapacityChangedEvent(event_name)) {
@@ -153,6 +162,7 @@ void SystemInfoEventRouter::AddEventListener(const std
                    base::Unretained(this)));
     return;
   }
+#endif
 
   // For systemInfo.display event.
   if (IsDisplayChangedEvent(event_name)) {
@@ -174,6 +184,7 @@ void SystemInfoEventRouter::RemoveEventListener(
   if (watching_event_set_.count(event_name) > 0)
     return;
 
+#if !defined(OS_BSD)
   // In case of the last event listener is removed, we need to stop watching
   // it to avoid unnecessary overhead.
   if (IsAvailableCapacityChangedEvent(event_name)) {
@@ -181,6 +192,7 @@ void SystemInfoEventRouter::RemoveEventListener(
         base::Bind(&SystemInfoEventRouter::StopWatchingStorages,
                    base::Unretained(this)));
   }
+#endif
 
   if (IsDisplayChangedEvent(event_name)) {
 #if defined(USE_ASH)
