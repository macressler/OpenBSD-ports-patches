$OpenBSD: patch-konference_conference_c,v 1.3 2012/10/24 09:37:21 sthen Exp $
--- konference/conference.c.orig	Mon Jul 16 14:12:48 2012
+++ konference/conference.c	Tue Oct 23 09:57:09 2012
@@ -122,7 +122,7 @@ static void conference_exec()
 		// check expirations
 		if ( outqueue.data != 1 ) 
 		{
-			ast_log(LOG_NOTICE, "kqueue expirations = %ld!?\n", outqueue.data);
+			ast_log(LOG_NOTICE, "kqueue expirations = %d!?\n", outqueue.data);
 		}
 #endif
 
@@ -466,6 +466,8 @@ static ast_conference* find_conf( const char* name )
 // This function should be called with conflist_lock held
 static ast_conference* create_conf( char* name, ast_conf_member* member )
 {
+	struct ast_format tmp_fmt;
+
 	//
 	// allocate memory for conference
 	//
@@ -497,7 +499,7 @@ static ast_conference* create_conf( char* name, ast_co
 	// initialize conference
 	//
 
-	conf->conference_thread = -1 ;
+	conf->conference_thread = NULL ;
 
 	// record start time
 	conf->time_entered = ast_tvnow();
@@ -511,27 +513,49 @@ static ast_conference* create_conf( char* name, ast_co
 	// build translation paths
 	conf->from_slinear_paths[ AC_SLINEAR_INDEX ] = NULL ;
 #ifndef AC_USE_G722
-	conf->from_slinear_paths[ AC_ULAW_INDEX ] = ast_translator_build_path( AST_FORMAT_ULAW, AST_FORMAT_SLINEAR ) ;
-	conf->from_slinear_paths[ AC_ALAW_INDEX ] = ast_translator_build_path( AST_FORMAT_ALAW, AST_FORMAT_SLINEAR ) ;
-	conf->from_slinear_paths[ AC_GSM_INDEX ] = ast_translator_build_path( AST_FORMAT_GSM, AST_FORMAT_SLINEAR ) ;
+	conf->from_slinear_paths[ AC_ULAW_INDEX ] = ast_translator_build_path(
+							ast_format_set(&tmp_fmt, AST_FORMAT_ULAW, 0),
+							ast_format_set(&tmp_fmt, AST_FORMAT_SLINEAR, 0) ) ;
+	conf->from_slinear_paths[ AC_ALAW_INDEX ] = ast_translator_build_path(
+							ast_format_set(&tmp_fmt, AST_FORMAT_ALAW, 0),
+							ast_format_set(&tmp_fmt, AST_FORMAT_SLINEAR, 0) ) ;
+	conf->from_slinear_paths[ AC_GSM_INDEX ] = ast_translator_build_path(
+							ast_format_set(&tmp_fmt, AST_FORMAT_GSM, 0),
+							ast_format_set(&tmp_fmt, AST_FORMAT_SLINEAR, 0) ) ;
 #ifdef	AC_USE_SPEEX
-	conf->from_slinear_paths[ AC_SPEEX_INDEX ] = ast_translator_build_path( AST_FORMAT_SPEEX, AST_FORMAT_SLINEAR ) ;
+	conf->from_slinear_paths[ AC_SPEEX_INDEX ] = ast_translator_build_path(
+							ast_format_set(&tmp_fmt, AST_FORMAT_SPEEX, 0),
+							ast_format_set(&tmp_fmt, AST_FORMAT_SLINEAR, 0) ) ;
 #endif
 #ifdef AC_USE_G729A
-	conf->from_slinear_paths[ AC_G729A_INDEX ] = ast_translator_build_path( AST_FORMAT_G729A, AST_FORMAT_SLINEAR ) ;
+	conf->from_slinear_paths[ AC_G729A_INDEX ] = ast_translator_build_path(
+							ast_format_set(&tmp_fmt, AST_FORMAT_G729A, 0),
+							ast_format_set(&tmp_fmt, AST_FORMAT_SLINEAR, 0) ) ;
 #endif
 #else
-	conf->from_slinear_paths[ AC_ULAW_INDEX ] = ast_translator_build_path( AST_FORMAT_ULAW, AST_FORMAT_SLINEAR16 ) ;
-	conf->from_slinear_paths[ AC_ALAW_INDEX ] = ast_translator_build_path( AST_FORMAT_ALAW, AST_FORMAT_SLINEAR16 ) ;
-	conf->from_slinear_paths[ AC_GSM_INDEX ] = ast_translator_build_path( AST_FORMAT_GSM, AST_FORMAT_SLINEAR16 ) ;
+	conf->from_slinear_paths[ AC_ULAW_INDEX ] = ast_translator_build_path(
+							ast_format_set(&tmp_fmt, AST_FORMAT_ULAW, 0),
+							ast_format_set(&tmp_fmt, AST_FORMAT_SLINEAR16, 0) ) ;
+	conf->from_slinear_paths[ AC_ALAW_INDEX ] = ast_translator_build_path(
+							ast_format_set(&tmp_fmt, AST_FORMAT_ALAW, 0),
+							ast_format_set(&tmp_fmt, AST_FORMAT_SLINEAR16, 0) ) ;
+	conf->from_slinear_paths[ AC_GSM_INDEX ] = ast_translator_build_path(
+							ast_format_set(&tmp_fmt, AST_FORMAT_GSM, 0),
+							ast_format_set(&tmp_fmt, AST_FORMAT_SLINEAR16, 0) ) ;
 #ifdef	AC_USE_SPEEX
-	conf->from_slinear_paths[ AC_SPEEX_INDEX ] = ast_translator_build_path( AST_FORMAT_SPEEX, AST_FORMAT_SLINEAR16 ) ;
+	conf->from_slinear_paths[ AC_SPEEX_INDEX ] = ast_translator_build_path(
+							ast_format_set(&tmp_fmt, AST_FORMAT_SPEEX, 0),
+							ast_format_set(&tmp_fmt, AST_FORMAT_SLINEAR16, 0) ) ;
 #endif
 #ifdef AC_USE_G729A
-	conf->from_slinear_paths[ AC_G729A_INDEX ] = ast_translator_build_path( AST_FORMAT_G729A, AST_FORMAT_SLINEAR16 ) ;
+	conf->from_slinear_paths[ AC_G729A_INDEX ] = ast_translator_build_path(
+							ast_format_set(&tmp_fmt, AST_FORMAT_G729A, 0),
+							ast_format_set(&tmp_fmt, AST_FORMAT_SLINEAR16, 0) ) ;
 #endif
 #ifdef AC_USE_G722
-	conf->from_slinear_paths[ AC_G722_INDEX ] = ast_translator_build_path( AST_FORMAT_G722, AST_FORMAT_SLINEAR16 ) ;
+	conf->from_slinear_paths[ AC_G722_INDEX ] = ast_translator_build_path(
+							ast_format_set(&tmp_fmt, AST_FORMAT_G722, 0),
+							ast_format_set(&tmp_fmt, AST_FORMAT_SLINEAR16, 0) ) ;
 #endif
 #endif
 
