$OpenBSD: patch-Source_NSBitmapImageRep+PNG_m,v 1.1 2013/10/21 08:49:09 sebastia Exp $

fix 16Bit png images, from upstream

--- Source/NSBitmapImageRep+PNG.m.orig	Thu Feb 21 09:53:31 2013
+++ Source/NSBitmapImageRep+PNG.m	Mon Oct 21 10:41:13 2013
@@ -98,7 +98,7 @@ static void reader_func(png_structp png_struct, png_by
   png_infop png_info, png_end_info;
 
   int width,height;
-  unsigned char *buf;
+  unsigned char *buf = NULL;
   int bytes_per_row;
   int type,channels,depth;
 
@@ -108,7 +108,6 @@ static void reader_func(png_structp png_struct, png_by
 
   reader_struct_t reader;
 
-
   if (!(self = [super init]))
     return nil;
 
@@ -137,7 +136,12 @@ static void reader_func(png_structp png_struct, png_by
 
   if (setjmp(png_jmpbuf(png_struct)))
     {
+      // We get here when an error happens during image loading
       png_destroy_read_struct(&png_struct, &png_info, &png_end_info);
+      if (buf != NULL)
+        {
+          NSZoneFree([self zone], buf);
+        }
       RELEASE(self);
       return nil;
     }
@@ -212,25 +216,29 @@ static void reader_func(png_structp png_struct, png_by
   buf = NSZoneMalloc([self zone], bytes_per_row * height);
 
   {
-    unsigned char *row_pointers[height];
+    png_bytep row_pointers[height];
     int i;
-    for (i=0;i<height;i++)
-      row_pointers[i]=buf+i*bytes_per_row;
+
+    for (i = 0; i < height; i++)
+      {
+        row_pointers[i] = buf + i * bytes_per_row;
+      }
+
     png_read_image(png_struct, row_pointers);
   }
 
-  [self initWithBitmapDataPlanes: &buf
-        pixelsWide: width
-        pixelsHigh: height
-        bitsPerSample: depth
-        samplesPerPixel: channels
-        hasAlpha: alpha
-        isPlanar: NO
-        colorSpaceName: colorspace
-        bitmapFormat: NSAlphaNonpremultipliedBitmapFormat
-        bytesPerRow: bytes_per_row
-		    bitsPerPixel: bpp];
-
+  self = [self initWithBitmapDataPlanes: &buf
+                             pixelsWide: width
+                             pixelsHigh: height
+                          bitsPerSample: depth
+                        samplesPerPixel: channels
+                               hasAlpha: alpha
+                               isPlanar: NO
+                         colorSpaceName: colorspace
+                           bitmapFormat: NSAlphaNonpremultipliedBitmapFormat
+                            bytesPerRow: bytes_per_row
+                           bitsPerPixel: bpp];
+  
   _imageData = [[NSData alloc]
     initWithBytesNoCopy: buf
 		 length: bytes_per_row * height];
