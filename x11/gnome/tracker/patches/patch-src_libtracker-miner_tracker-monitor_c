$OpenBSD: patch-src_libtracker-miner_tracker-monitor_c,v 1.9 2012/11/16 07:22:51 ajacoutot Exp $

From 0fbb71aeba428789340e53bf10e1d9afbc0f3193 Mon Sep 17 00:00:00 2001
From: Antoine Jacoutot <ajacoutot@gnome.org>
Date: Thu, 15 Nov 2012 19:06:50 +0000
Subject: tracker-monitor: add support for GKqueueDirectoryMonitor

--- src/libtracker-miner/tracker-monitor.c.orig	Wed Feb 15 16:19:19 2012
+++ src/libtracker-miner/tracker-monitor.c	Thu Nov 15 16:51:07 2012
@@ -23,6 +23,13 @@
 #include <string.h>
 #include <gio/gio.h>
 
+#if defined (__OpenBSD__) || defined (__FreeBSD__) || defined (__NetBSD__) || defined (__APPLE__)
+#include <sys/types.h>
+#include <sys/time.h>
+#include <sys/resource.h>
+#define TRACKER_MONITOR_KQUEUE
+#endif
+
 #include "tracker-monitor.h"
 #include "tracker-marshal.h"
 
@@ -119,6 +126,7 @@ static void           tracker_monitor_get_property (GO
                                                     guint           prop_id,
                                                     GValue         *value,
                                                     GParamSpec     *pspec);
+static guint          get_kqueue_limit             (void);
 static guint          get_inotify_limit            (void);
 static GFileMonitor * directory_monitor_new        (TrackerMonitor *monitor,
                                                     GFile          *file);
@@ -296,6 +304,12 @@ tracker_monitor_init (TrackerMonitor *object)
 			 */
 			priv->monitor_limit = MAX (priv->monitor_limit, 0);
 		}
+		else if (strcmp (name, "GKqueueDirectoryMonitor") == 0) {
+			/* Using kqueue(2) */
+			g_message ("Monitor backend is kqueue");
+
+			priv->monitor_limit = get_kqueue_limit ();
+		}
 		else if (strcmp (name, "GFamDirectoryMonitor") == 0) {
 			/* Using Fam */
 			g_message ("Monitor backend is Fam");
@@ -397,6 +411,20 @@ tracker_monitor_get_property (GObject      *object,
 	default:
 		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, prop_id, pspec);
 	}
+}
+
+static guint
+get_kqueue_limit (void)
+{
+	guint limit = 400;
+
+#ifdef TRACKER_MONITOR_KQUEUE
+	struct rlimit rl;
+	if (getrlimit (RLIMIT_NOFILE, &rl) == 0)
+		limit = (rl.rlim_cur * 90) / 100;
+#endif /* TRACKER_MONITOR_KQUEUE */
+
+	return limit;
 }
 
 static guint
