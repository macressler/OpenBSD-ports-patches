$OpenBSD: patch-gck_tests_test-gck-attributes_c,v 1.3 2013/03/22 11:05:59 ajacoutot Exp $

From aeae080e778c5168eae22b3271d60fc6bc7e1482 Mon Sep 17 00:00:00 2001
From: Stef Walter <stefw@gnome.org>
Date: Fri, 09 Nov 2012 13:06:41 +0000
Subject: gck: Remove duplicate defined symbol

From c96aa2795ffa0c3305787c237dc223571b4934b4 Mon Sep 17 00:00:00 2001
From: Stef Walter <stefw@gnome.org>
Date: Thu, 21 Mar 2013 17:32:07 +0000
Subject: gck: Fix crash when hashing an unsupported attributes

--- gck/tests/test-gck-attributes.c.orig	Mon Nov 12 08:30:20 2012
+++ gck/tests/test-gck-attributes.c	Fri Mar 22 11:52:36 2013
@@ -31,8 +31,6 @@
 #include "gck/gck.h"
 #include "gck/gck-test.h"
 
-EGG_SECURE_DEFINE_GLIB_GLOBALS ();
-
 EGG_SECURE_DECLARE (test_gck_attributes);
 
 #define ATTR_TYPE 55
@@ -963,6 +961,31 @@ test_builder_add_attr (void)
 }
 
 static void
+test_attribute_hash (void)
+{
+	guchar *data = (guchar *)"extra attribute";
+	GckAttribute one = { CKA_LABEL, (guchar *)"yay", 3 };
+	GckAttribute null = { CKA_LABEL, (guchar *)NULL, 3 };
+	GckAttribute zero = { CKA_LABEL, (guchar *)NULL, 0 };
+	GckAttribute two = { CKA_VALUE, (guchar *)"yay", 3 };
+	GckAttribute other = { CKA_VALUE, data, 5 };
+	GckAttribute overflow = { CKA_VALUE, data, 5 };
+	GckAttribute content = { CKA_VALUE, (guchar *)"conte", 5 };
+	guint hash;
+
+	hash = gck_attribute_hash (&one);
+	g_assert_cmpuint (hash, !=, 0);
+
+	g_assert_cmpuint (gck_attribute_hash (&one), ==, hash);
+	g_assert_cmpuint (gck_attribute_hash (&two), !=, hash);
+	g_assert_cmpuint (gck_attribute_hash (&other), !=, hash);
+	g_assert_cmpuint (gck_attribute_hash (&overflow), !=, hash);
+	g_assert_cmpuint (gck_attribute_hash (&null), !=, hash);
+	g_assert_cmpuint (gck_attribute_hash (&zero), !=, hash);
+	g_assert_cmpuint (gck_attribute_hash (&content), !=, hash);
+}
+
+static void
 test_attributes_refs (void)
 {
 	GckBuilder builder = GCK_BUILDER_INIT;
@@ -1301,6 +1324,7 @@ main (int argc, char **argv)
 	g_test_add_func ("/gck/attribute/get_string", test_get_string);
 	g_test_add_func ("/gck/attribute/dup_attribute", test_dup_attribute);
 	g_test_add_func ("/gck/attribute/copy_attribute", test_copy_attribute);
+	g_test_add_func ("/gck/attribute/hash", test_attribute_hash);
 	g_test_add_func ("/gck/builder/blank", test_builder_blank);
 	g_test_add_func ("/gck/builder/data", test_build_data);
 	g_test_add_func ("/gck/builder/data-invalid", test_build_data_invalid);
