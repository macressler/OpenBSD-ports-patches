$OpenBSD: patch-libseahorse_seahorse-secure-memory_c,v 1.1 2012/07/12 10:59:13 ajacoutot Exp $

From 9b12bfdd245867f928651bc5414cba67a3f84169 Mon Sep 17 00:00:00 2001
From: Stef Walter <stefw@gnome.org>
Date: Mon, 30 Apr 2012 18:19:46 +0000
Subject: Use libsecret instead of libgnome-keyring

--- libseahorse/seahorse-secure-memory.c.orig	Wed Sep 14 17:04:58 2011
+++ libseahorse/seahorse-secure-memory.c	Thu Jul 12 12:53:56 2012
@@ -25,9 +25,8 @@
 #include <string.h>
   
 #include <glib.h>
-  
-#include <gnome-keyring-memory.h>
-  
+#include <gcr/gcr.h>
+
 #include "seahorse-secure-memory.h"
   
   /* extern declared in seahorse-secure-memory.h */
@@ -50,7 +49,7 @@ switch_malloc (gsize size)
     if (size == 0)
         return NULL;
     if (seahorse_use_secure_mem)
-        p = gnome_keyring_memory_try_alloc (size);
+        p = gcr_secure_memory_try_alloc (size);
     else
         p = malloc (size);
     return p;
@@ -74,7 +73,7 @@ switch_calloc (gsize num, gsize size)
     if (size == 0 || num == 0)
         return NULL;
     if (seahorse_use_secure_mem)
-        p = gnome_keyring_memory_try_alloc (size * num);
+        p = gcr_secure_memory_try_alloc (size * num);
     else
         p = calloc (num, size);
     return p;
@@ -102,11 +101,11 @@ switch_realloc (gpointer mem, gsize size)
 
     if (!mem) {
         if (seahorse_use_secure_mem)
-            p = gnome_keyring_memory_alloc (size);
+            p = gcr_secure_memory_alloc (size);
         else
             p = malloc (size);
-    } else if (gnome_keyring_memory_is_secure (mem))
-        p = gnome_keyring_memory_try_realloc (mem, size);
+    } else if (gcr_secure_memory_is_secure (mem))
+        p = gcr_secure_memory_try_realloc (mem, size);
     else
         p = realloc (mem, size);
     return p;
@@ -123,8 +122,8 @@ static void
 switch_free (gpointer mem)
 {
     if (mem) {
-        if (gnome_keyring_memory_is_secure (mem))
-            gnome_keyring_memory_free (mem);
+        if (gcr_secure_memory_is_secure (mem))
+            gcr_secure_memory_free (mem);
         else
             free (mem);
     }
@@ -141,9 +140,9 @@ seahorse_try_gk_secure_memory ()
 {
     gpointer p;
 
-    p = gnome_keyring_memory_try_alloc (10);
+    p = gcr_secure_memory_try_alloc (10);
     if (p != NULL) {
-        gnome_keyring_memory_free (p);
+        gcr_secure_memory_free (p);
         return TRUE;
     }
 
@@ -173,7 +172,7 @@ seahorse_secure_memory_init ()
         vtable.calloc = switch_calloc;
         g_mem_set_vtable (&vtable);
     } else {
-        g_warning ("Unable to allocate secure memory from gnome-keyring.\n");
+        g_warning ("Unable to allocate secure memory.\n");
         g_warning ("Proceeding using insecure memory for password fields.\n");
     }
 }
