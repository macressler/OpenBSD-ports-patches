$OpenBSD: patch-Alacarte_MenuEditor_py,v 1.3 2013/03/11 09:37:03 ajacoutot Exp $

From fe7211f2eb4c8bcf7cbddca75bf4e28ee7b98659 Mon Sep 17 00:00:00 2001
From: Jasper St. Pierre <jstpierre@mecheye.net>
Date: Tue, 23 Oct 2012 03:08:38 +0000
Subject: MenuEditor: deal with the case of having no $XDG_MENU_PREFIX

From f7835d7dcd37b10f25e208581ec52919cf68e732 Mon Sep 17 00:00:00 2001
From: Jasper St. Pierre <jstpierre@mecheye.net>
Date: Sat, 17 Nov 2012 04:22:14 +0000
Subject: Fix crashes when writing out files

From 10f611c074ae7b2ab0ec48ff3b8946c5f8e19970 Mon Sep 17 00:00:00 2001
From: Jasper St. Pierre <jstpierre@mecheye.net>
Date: Sat, 17 Nov 2012 04:26:14 +0000
Subject: Use with statements for management

--- Alacarte/MenuEditor.py.orig	Mon Mar 11 09:45:45 2013
+++ Alacarte/MenuEditor.py	Mon Mar 11 09:45:33 2013
@@ -16,6 +16,7 @@
 #   License along with this library; if not, write to the Free Software
 #   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 
+import codecs
 import os
 import xml.dom.minidom
 import xml.parsers.expat
@@ -23,7 +24,7 @@ from gi.repository import GMenu, GLib
 from Alacarte import util
 
 class MenuEditor(object):
-    def __init__(self, name=os.environ['XDG_MENU_PREFIX'] + 'applications.menu'):
+    def __init__(self, name=os.environ.get('XDG_MENU_PREFIX', '') + 'applications.menu'):
         self.name = name
 
         self.tree = GMenu.Tree.new(name, GMenu.TreeFlags.SHOW_EMPTY|GMenu.TreeFlags.INCLUDE_EXCLUDED|GMenu.TreeFlags.INCLUDE_NODISPLAY|GMenu.TreeFlags.SHOW_ALL_SEPARATORS|GMenu.TreeFlags.SORT_DISPLAY_NAME)
@@ -48,9 +49,8 @@ class MenuEditor(object):
         self.load()
 
     def save(self):
-        fd = open(self.path, 'w')
-        fd.write(self.dom.toprettyxml())
-        fd.close()
+        with codecs.open(self.path, 'w', 'utf8') as f:
+            f.write(self.dom.toprettyxml())
 
     def restoreToSystem(self):
         self.restoreTree(self.tree.get_root_directory())
@@ -259,9 +259,8 @@ class MenuEditor(object):
 
         contents, length = keyfile.to_data()
 
-        f = open(out_path, 'w')
-        f.write(contents)
-        f.close()
+        with codecs.open(out_path, 'w', 'utf8') as f:
+            f.write(contents)
 
         self.addItem(new_parent, file_id, dom)
         self.positionItem(new_parent, ('Item', file_id), before, after)
@@ -400,9 +399,10 @@ class MenuEditor(object):
 
         contents, length = keyfile.to_data()
 
-        f = open(os.path.join(util.getUserItemPath(), file_id), 'w')
-        f.write(contents)
-        f.close()
+        path = os.path.join(util.getUserItemPath(), file_id)
+        with codecs.open(path, 'w', 'utf8') as f:
+            f.write(contents)
+
         return file_id
 
     def writeMenu(self, menu, **kwargs):
@@ -421,9 +421,9 @@ class MenuEditor(object):
 
         contents, length = keyfile.to_data()
 
-        f = open(os.path.join(util.getUserDirectoryPath(), file_id), 'w')
-        f.write(contents)
-        f.close()
+        path = os.path.join(util.getUserDirectoryPath(), file_id)
+        with codecs.open(path, 'w', 'utf8') as f:
+            f.write(contents)
         return file_id
 
     def getXmlNodesByName(self, name, element):
