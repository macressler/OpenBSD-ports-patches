$OpenBSD: patch-okteta_kasten_controllers_test_commonparsertest_cpp,v 1.1.1.1 2013/04/24 19:04:15 zhuk Exp $
--- okteta/kasten/controllers/test/commonparsertest.cpp.orig	Fri Feb  8 14:32:30 2013
+++ okteta/kasten/controllers/test/commonparsertest.cpp	Fri Feb  8 14:35:44 2013
@@ -19,6 +19,12 @@
  *   You should have received a copy of the GNU Lesser General Public
  *   License along with this library. If not, see <http://www.gnu.org/licenses/>.
  */
+
+#define __STDC_CONSTANT_MACROS
+
+#include <sys/types.h>
+#include <stdint.h>
+
 #include <QtTest>
 #include <QScriptValue>
 #include <QScriptEngine>
@@ -175,7 +181,7 @@ void CommonParserTest::testIntFromScriptValue_data()
     QTest::newRow("min string") << QScriptValue(QLatin1String("-2147483648")) << true << minInt;
     QTest::newRow("min hex string") << QScriptValue(QLatin1String("-0x80000000")) << true << minInt;
     QTest::newRow("min-1") << QScriptValue(double(minInt) - 1) << false;
-    QTest::newRow("large number") << QScriptValue(double(0x123456789a)) << false;
+    QTest::newRow("large number") << QScriptValue(double(UINT64_C(0x123456789a))) << false;
 
 }
 
@@ -232,7 +238,7 @@ void CommonParserTest::testUIntFromScriptValue_data()
     QTest::newRow("max+1") << QScriptValue(double(maxInt) + 1) << false;
     QTest::newRow("max+1 string") << QScriptValue(QLatin1String("4294967296")) << false;
     QTest::newRow("max+1 hex string") << QScriptValue(QLatin1String("0x100000000")) << false;
-    QTest::newRow("large number") << QScriptValue(double(0x123456789a)) << false;
+    QTest::newRow("large number") << QScriptValue(double(UINT64_C(0x123456789a))) << false;
 }
 
 void CommonParserTest::testUIntFromScriptValue()
