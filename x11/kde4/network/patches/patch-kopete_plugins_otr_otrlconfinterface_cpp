$OpenBSD: patch-kopete_plugins_otr_otrlconfinterface_cpp,v 1.1 2013/10/05 01:39:02 zhuk Exp $
Support for libotr-4.0, from upstream.
--- kopete/plugins/otr/otrlconfinterface.cpp.orig	Fri Jun 28 22:08:21 2013
+++ kopete/plugins/otr/otrlconfinterface.cpp	Sat Oct  5 05:10:45 2013
@@ -1,5 +1,5 @@
 /*************************************************************************
- * Copyright <2007>  <Michael Zanetti> <michael_zanetti@gmx.net>         *
+ * Copyright <2007 - 2013>  <Michael Zanetti> <mzanetti@kde.org>         *
  *                                                                       *
  * This program is free software; you can redistribute it and/or         *
  * modify it under the terms of the GNU General Public License as        *
@@ -83,11 +83,7 @@ void OtrlConfInterface::generateNewPrivKey( const QStr
 	popup->show();
 	popup->setCloseLock( true );
 
-	KeyGenThread *keyGenThread = new KeyGenThread ( accountId, protocol );
-	keyGenThread->start();
-	while( !keyGenThread->wait(100) ){
-		qApp->processEvents(QEventLoop::ExcludeUserInputEvents | QEventLoop::ExcludeSocketNotifiers, 100);
-	}
+	OtrlChatInterface::self()->generatePrivateKey(accountId, protocol);
 
 	popup->setCloseLock( false );
 	popup->close();
@@ -108,7 +104,7 @@ QList<QStringList> OtrlConfInterface::readAllFingerpri
 				entry << i18nc("@item:intable Fingerprint was never used", "Unused");
 			} else {
 				if (context && context->msgstate == OTRL_MSGSTATE_ENCRYPTED) {
-					if (context->active_fingerprint->trust && context->active_fingerprint->trust[0] != NULL) {
+					if (context->active_fingerprint->trust && context->active_fingerprint->trust[0]) {
 						entry << i18nc("@item:intable Fingerprint is used in a private conversation", "Private");
 					} else {
 						entry << i18nc("@item:intable Fingerprint is used in an unverified conversation", "Unverified");
