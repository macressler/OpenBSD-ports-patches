$OpenBSD: patch-common_mk,v 1.9 2012/04/26 10:55:10 dcoppa Exp $
--- common.mk.orig	Fri Jan 27 20:24:15 2012
+++ common.mk	Thu Apr 26 12:28:18 2012
@@ -1,90 +1,28 @@
 UNAME=$(shell uname)
-DEBUG=1
+DEBUG=0
 COVERAGE=0
 INSTALL=install
 ifndef PREFIX
   PREFIX=/usr
 endif
 ifndef SYSCONFDIR
-  ifeq ($(PREFIX),/usr)
-    SYSCONFDIR=/etc
-  else
-    SYSCONFDIR=$(PREFIX)/etc
-  endif
+  SYSCONFDIR=/etc
 endif
 # The escaping is absurd, but we need to escape for shell, sed, make, define
 GIT_VERSION:="4.1.2 (2012-01-27, branch \\\"release-4.1.2\\\")"
 VERSION:=4.1.2
 
-ifeq ($(shell which pkg-config 2>/dev/null 1>/dev/null || echo 1),1)
-$(error "pkg-config was not found")
-endif
-
-# An easier way to get CFLAGS and LDFLAGS falling back in case there's
-# no pkg-config support for certain libraries.
-#
-# NOTE that you must not use a blank after comma when calling this:
-#     $(call ldflags_for_lib name, fallback) # bad
-#     $(call ldflags_for_lib name,fallback) # good
-# Otherwise, the compiler will get -l foo instead of -lfoo
-#
-# We redirect stderr to /dev/null because pkg-config prints an error if support
-# for gnome-config was enabled but gnome-config is not actually installed.
-cflags_for_lib = $(shell pkg-config --silence-errors --cflags $(1) 2>/dev/null)
-ldflags_for_lib = $(shell pkg-config --exists 2>/dev/null $(1) && pkg-config --libs $(1) 2>/dev/null || echo -l$(2))
-
 CFLAGS += -std=c99
-CFLAGS += -pipe
-CFLAGS += -Wall
 # unused-function, unused-label, unused-variable are turned on by -Wall
 # We don’t want unused-parameter because of the use of many callbacks
 CFLAGS += -Wunused-value
-CFLAGS += -Iinclude
-CFLAGS += $(call cflags_for_lib, xcb-keysyms)
-ifeq ($(shell pkg-config --exists xcb-util 2>/dev/null || echo 1),1)
+CFLAGS += -I$(TOPDIR)/include
 CPPFLAGS += -DXCB_COMPAT
-CFLAGS += $(call cflags_for_lib, xcb-atom)
-CFLAGS += $(call cflags_for_lib, xcb-aux)
-else
-CFLAGS += $(call cflags_for_lib, xcb-util)
-endif
-CFLAGS += $(call cflags_for_lib, xcb-icccm)
-CFLAGS += $(call cflags_for_lib, xcb-xinerama)
-CFLAGS += $(call cflags_for_lib, xcb-randr)
-CFLAGS += $(call cflags_for_lib, xcb)
-CFLAGS += $(call cflags_for_lib, xcursor)
-CFLAGS += $(call cflags_for_lib, x11)
-CFLAGS += $(call cflags_for_lib, yajl)
-CFLAGS += $(call cflags_for_lib, libev)
-CFLAGS += $(call cflags_for_lib, libpcre)
-CFLAGS += $(call cflags_for_lib, libstartup-notification-1.0)
 CPPFLAGS += -DI3_VERSION=\"${GIT_VERSION}\"
 CPPFLAGS += -DSYSCONFDIR=\"${SYSCONFDIR}\"
-
-ifeq ($(shell pkg-config --atleast-version=8.10 libpcre 2>/dev/null && echo 1),1)
 CPPFLAGS += -DPCRE_HAS_UCP=1
-endif
 
-LIBS += -lm
-LIBS += -L $(TOPDIR)/libi3 -li3
-LIBS += $(call ldflags_for_lib, xcb-event,xcb-event)
-LIBS += $(call ldflags_for_lib, xcb-keysyms,xcb-keysyms)
-ifeq ($(shell pkg-config --exists xcb-util 2>/dev/null || echo 1),1)
-LIBS += $(call ldflags_for_lib, xcb-atom,xcb-atom)
-LIBS += $(call ldflags_for_lib, xcb-aux,xcb-aux)
-else
-LIBS += $(call ldflags_for_lib, xcb-util)
-endif
-LIBS += $(call ldflags_for_lib, xcb-icccm,xcb-icccm)
-LIBS += $(call ldflags_for_lib, xcb-xinerama,xcb-xinerama)
-LIBS += $(call ldflags_for_lib, xcb-randr,xcb-randr)
-LIBS += $(call ldflags_for_lib, xcb,xcb)
-LIBS += $(call ldflags_for_lib, xcursor,Xcursor)
-LIBS += $(call ldflags_for_lib, x11,X11)
-LIBS += $(call ldflags_for_lib, yajl,yajl)
-LIBS += $(call ldflags_for_lib, libev,ev)
-LIBS += $(call ldflags_for_lib, libpcre,pcre)
-LIBS += $(call ldflags_for_lib, libstartup-notification-1.0,startup-notification-1)
+LIBS += -L$(TOPDIR)/libi3 -lX11 -lX11-xcb -lXau -lXcursor -lXdmcp -lXfixes -lXrender -lev -li3 -lm -lpcre -lpthread-stubs -lstartup-notification-1 -lxcb -lxcb-atom -lxcb-aux -lxcb-event -lxcb-icccm -lxcb-keysyms -lxcb-property -lxcb-randr -lxcb-xinerama -lyajl
 
 # Please test if -Wl,--as-needed works on your platform and send me a patch.
 # it is known not to work on Darwin (Mac OS X)
@@ -99,9 +37,9 @@ LDFLAGS += -Wl,-rpath,/usr/local/lib -Wl,-rpath,/usr/p
 endif
 
 ifeq ($(UNAME),OpenBSD)
-CFLAGS += -I${X11BASE}/include
+CFLAGS += -I${X11BASE}/include -I${LOCALBASE}/include -I${LOCALBASE}/include/startup-notification-1.0
 LIBS += -liconv
-LDFLAGS += -L${X11BASE}/lib
+LDFLAGS += -L${X11BASE}/lib -L${LOCALBASE}/lib
 endif
 
 ifeq ($(UNAME),FreeBSD)
@@ -124,18 +62,12 @@ ifeq ($(DEBUG),1)
 # Extended debugging flags, macros shall be available in gcc
 CFLAGS += -gdwarf-2
 CFLAGS += -g3
-else
-CFLAGS += -O2
-CFLAGS += -freorder-blocks-and-partition
 endif
 
 ifeq ($(COVERAGE),1)
 CFLAGS += -fprofile-arcs -ftest-coverage
 LIBS += -lgcov
 endif
-
-# Don’t print command lines which are run
-.SILENT:
 
 # Always remake the following targets
 .PHONY: install clean dist distclean
