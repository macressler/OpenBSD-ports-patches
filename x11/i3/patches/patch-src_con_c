$OpenBSD: patch-src_con_c,v 1.2 2011/12/01 16:00:01 dcoppa Exp $

Bugfix: retain absolute window position and size when changing
floating borders (git commit 970d11709e99aab7db13a2fd28a758a68a4137dc)

Do not set the _NET_WM_WORKAREA hint: fix incorrect transient
geometry with wxwidgets
(upstream git commit d25e77ce7597bf0736c610a04185c8c27694c890)

--- src/con.c.orig	Fri Nov 11 23:41:20 2011
+++ src/con.c	Thu Dec  1 14:07:37 2011
@@ -942,6 +942,52 @@ int con_border_style(Con *con) {
 }
 
 /*
+ * Sets the given border style on con, correctly keeping the position/size of a
+ * floating window.
+ *
+ */
+void con_set_border_style(Con *con, int border_style) {
+    /* Handle the simple case: non-floating containerns */
+    if (!con_is_floating(con)) {
+        con->border_style = border_style;
+        return;
+    }
+
+    /* For floating containers, we want to keep the position/size of the
+     * *window* itself. Since the window size is rendered based on the
+     * container which it is in, we first remove the border/decoration specific
+     * amount of pixels from parent->rect, change the border, then add the new
+     * border/decoration specific pixels. */
+    DLOG("This is a floating container\n");
+
+    /* Get current border/decoration pixel values. */
+    int deco_height =
+        (con->border_style == BS_NORMAL ? config.font.height + 5 : 0);
+    Rect bsr = con_border_style_rect(con);
+    Con *parent = con->parent;
+
+    con->rect.x += bsr.x;
+    con->rect.y += bsr.y;
+    con->rect.width += bsr.width;
+    con->rect.height += bsr.height;
+
+    /* Change the border style, get new border/decoration values. */
+    con->border_style = border_style;
+    bsr = con_border_style_rect(con);
+    deco_height = (con->border_style == BS_NORMAL ? config.font.height + 5 : 0);
+
+    con->rect.x -= bsr.x;
+    con->rect.y -= bsr.y;
+    con->rect.width -= bsr.width;
+    con->rect.height -= bsr.height;
+
+    parent->rect.x = con->rect.x;
+    parent->rect.y = con->rect.y - deco_height;
+    parent->rect.width = con->rect.width;
+    parent->rect.height = con->rect.height + deco_height;
+}
+
+/*
  * This function changes the layout of a given container. Use it to handle
  * special cases like changing a whole workspace to stacked/tabbed (creates a
  * new split container before).
@@ -1023,7 +1069,6 @@ static void con_on_remove_child(Con *con) {
             LOG("Closing old workspace (%p / %s), it is empty\n", con, con->name);
             tree_close(con, DONT_KILL_WINDOW, false, false);
             ipc_send_event("workspace", I3_IPC_EVENT_WORKSPACE, "{\"change\":\"empty\"}");
-            ewmh_update_workarea();
         }
         return;
     }
