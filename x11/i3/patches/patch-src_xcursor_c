$OpenBSD: patch-src_xcursor_c,v 1.1 2014/01/11 16:04:43 dcoppa Exp $

Revert to libXcursor

--- src/xcursor.c.orig	Sun Dec 22 21:12:41 2013
+++ src/xcursor.c	Fri Jan 10 18:00:16 2014
@@ -10,14 +10,14 @@
  *
  */
 #include <assert.h>
-#include <xcb/xcb_cursor.h>
+#include <X11/Xcursor/Xcursor.h>
+#include <X11/cursorfont.h>
 
 #include "i3.h"
 #include "xcb.h"
 #include "xcursor.h"
 
-static xcb_cursor_context_t *ctx;
-static xcb_cursor_t cursors[XCURSOR_CURSOR_MAX];
+static Cursor cursors[XCURSOR_CURSOR_MAX];
 
 static const int xcb_cursors[XCURSOR_CURSOR_MAX] = {
     XCB_CURSOR_LEFT_PTR,
@@ -26,28 +26,27 @@ static const int xcb_cursors[XCURSOR_CURSOR_MAX] = {
     XCB_CURSOR_WATCH
 };
 
-void xcursor_load_cursors(void) {
-    if (xcb_cursor_context_new(conn, root_screen, &ctx) < 0) {
+static Cursor load_cursor(const char *name) {
+    Cursor c = XcursorLibraryLoadCursor(xlibdpy, name);
+    if (c == None) {
         ELOG("xcursor support unavailable\n");
         xcursor_supported = false;
-        return;
     }
-#define LOAD_CURSOR(constant, name) \
-    do { \
-        cursors[constant] = xcb_cursor_load_cursor(ctx, name); \
-    } while (0)
-    LOAD_CURSOR(XCURSOR_CURSOR_POINTER, "left_ptr");
-    LOAD_CURSOR(XCURSOR_CURSOR_RESIZE_HORIZONTAL, "sb_h_double_arrow");
-    LOAD_CURSOR(XCURSOR_CURSOR_RESIZE_VERTICAL, "sb_v_double_arrow");
-    LOAD_CURSOR(XCURSOR_CURSOR_WATCH, "watch");
-    LOAD_CURSOR(XCURSOR_CURSOR_MOVE, "fleur");
-    LOAD_CURSOR(XCURSOR_CURSOR_TOP_LEFT_CORNER, "top_left_corner");
-    LOAD_CURSOR(XCURSOR_CURSOR_TOP_RIGHT_CORNER, "top_right_corner");
-    LOAD_CURSOR(XCURSOR_CURSOR_BOTTOM_LEFT_CORNER, "bottom_left_corner");
-    LOAD_CURSOR(XCURSOR_CURSOR_BOTTOM_RIGHT_CORNER, "bottom_right_corner");
-#undef LOAD_CURSOR
+    return c;
 }
 
+void xcursor_load_cursors(void) {
+    cursors[XCURSOR_CURSOR_POINTER]             = load_cursor("left_ptr");
+    cursors[XCURSOR_CURSOR_RESIZE_HORIZONTAL]   = load_cursor("sb_h_double_arrow");
+    cursors[XCURSOR_CURSOR_RESIZE_VERTICAL]     = load_cursor("sb_v_double_arrow");
+    cursors[XCURSOR_CURSOR_WATCH]               = load_cursor("watch");
+    cursors[XCURSOR_CURSOR_MOVE]                = load_cursor("fleur");
+    cursors[XCURSOR_CURSOR_TOP_LEFT_CORNER]     = load_cursor("top_left_corner");
+    cursors[XCURSOR_CURSOR_TOP_RIGHT_CORNER]    = load_cursor("top_right_corner");
+    cursors[XCURSOR_CURSOR_BOTTOM_LEFT_CORNER]  = load_cursor("bottom_left_corner");
+    cursors[XCURSOR_CURSOR_BOTTOM_RIGHT_CORNER] = load_cursor("bottom_right_corner");
+}
+
 /*
  * Sets the cursor of the root window to the 'pointer' cursor.
  *
@@ -56,11 +55,13 @@ void xcursor_load_cursors(void) {
  *
  */
 void xcursor_set_root_cursor(int cursor_id) {
-    xcb_change_window_attributes(conn, root, XCB_CW_CURSOR,
-        (uint32_t[]){ xcursor_get_cursor(cursor_id) });
+    XSetWindowAttributes attributes;
+    attributes.cursor = xcursor_get_cursor(cursor_id);
+    XChangeWindowAttributes(xlibdpy, DefaultRootWindow(xlibdpy), CWCursor, &attributes);
+    XFlush(xlibdpy);
 }
 
-xcb_cursor_t xcursor_get_cursor(enum xcursor_cursor_t c) {
+Cursor xcursor_get_cursor(enum xcursor_cursor_t c) {
     assert(c >= 0 && c < XCURSOR_CURSOR_MAX);
     return cursors[c];
 }
