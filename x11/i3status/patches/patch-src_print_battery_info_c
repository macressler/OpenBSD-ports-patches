$OpenBSD: patch-src_print_battery_info_c,v 1.8 2012/10/10 07:20:16 jasper Exp $

From 8da0452d2c51826fd871520f7a8ba7a43a59401c Mon Sep 17 00:00:00 2001
From: Jasper Lievisse Adriaanse <jasper@openbsd.org>
Date: Mon, 08 Oct 2012 11:30:38 +0000
Subject: Various fixes for the OpenBSD section of the battery backend.

- fix the battery status printing in %status.
- fix remaining time when we're charging.
- use colors to indicate battery status.
- small cleanups.

--- src/print_battery_info.c.orig	Wed Oct  3 13:44:44 2012
+++ src/print_battery_info.c	Mon Oct  8 15:23:17 2012
@@ -228,7 +228,7 @@ void print_battery_info(yajl_gen json_gen, char *buffe
 	 * probing acpi(4) devices.
 	 */
 	struct apm_power_info apm_info;
-	int apm_fd, ac_status, charging;
+	int apm_fd;
 
 	apm_fd = open("/dev/apm", O_RDONLY);
 	if (apm_fd < 0) {
@@ -249,26 +249,41 @@ void print_battery_info(yajl_gen json_gen, char *buffe
 
 	switch(apm_info.ac_state) {
 	case APM_AC_OFF:
-		ac_status = CS_DISCHARGING;
+		status = CS_DISCHARGING;
 		break;
 	case APM_AC_ON:
-		ac_status = CS_CHARGING;
+		status = CS_CHARGING;
 		break;
 	default:
 		/* If we don't know what's going on, just assume we're discharging. */
-		ac_status = CS_DISCHARGING;
+		status = CS_DISCHARGING;
 		break;
 	}
 
 	(void)snprintf(statusbuf, sizeof(statusbuf), "%s", BATT_STATUS_NAME(status));
         (void)snprintf(percentagebuf, sizeof(percentagebuf), "%02d%%", apm_info.battery_life);
 
+	if (status == CS_DISCHARGING && low_threshold > 0) {
+		if (strncmp(threshold_type, "percentage", strlen(threshold_type)) == 0
+		    && apm_info.battery_life < low_threshold) {
+			START_COLOR("color_bad");
+			colorful_output = true;
+		} else if (strncmp(threshold_type, "time", strlen(threshold_type)) == 0
+			   && apm_info.minutes_left < (u_int) low_threshold) {
+			START_COLOR("color_bad");
+			colorful_output = true;
+		}
+	}
+
 	/* Can't give a meaningful value for remaining minutes if we're charging. */
-	if (ac_status == CS_CHARGING)
-		charging = 1;
+	if (status != CS_CHARGING) {
+		(void)snprintf(remainingbuf, sizeof(remainingbuf), "%d", apm_info.minutes_left);
+	} else {
+		(void)snprintf(remainingbuf, sizeof(remainingbuf), "%s", "(CHR)");
+	}
 
-	(void)snprintf(remainingbuf, sizeof(remainingbuf), (charging ? "%s" : "%d"),
-		       (charging ? "(CHR)" : apm_info.minutes_left));
+	if (colorful_output)
+		END_COLOR;
 #endif
 
 #define EAT_SPACE_FROM_OUTPUT_IF_EMPTY(_buf) \
