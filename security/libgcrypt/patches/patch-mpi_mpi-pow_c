$OpenBSD: patch-mpi_mpi-pow_c,v 1.2 2013/08/06 19:22:10 jasper Exp $

Security fix for CVE-2013-4242 GnuPG side-channel attack on RSA secret keys
http://lists.gnupg.org/pipermail/gnupg-announce/2013q3/000330.html

From 35646689f4b80955ff7dbe1687bf2c479c53421e Mon Sep 17 00:00:00 2001
From: Werner Koch <wk@gnupg.org>
Date: Fri, 19 Jul 2013 13:49:23 +0200
Subject: [PATCH] Mitigate a flush+reload cache attack on RSA secret exponents.

--- mpi/mpi-pow.c.orig	Mon Mar 28 14:19:52 2011
+++ mpi/mpi-pow.c	Tue Jul 30 11:15:10 2013
@@ -1,6 +1,7 @@
 /* mpi-pow.c  -  MPI functions for exponentiation
  * Copyright (C) 1994, 1996, 1998, 2000, 2002
  *               2003  Free Software Foundation, Inc.
+ *               2013  g10 Code GmbH
  *
  * This file is part of Libgcrypt.
  *
@@ -230,7 +231,13 @@ gcry_mpi_powm (gcry_mpi_t res,
             tp = rp; rp = xp; xp = tp;
             rsize = xsize;
 
-            if ( (mpi_limb_signed_t)e < 0 )
+            /* To mitigate the Yarom/Falkner flush+reload cache
+             * side-channel attack on the RSA secret exponent, we do
+             * the multiplication regardless of the value of the
+             * high-bit of E.  But to avoid this performance penalty
+             * we do it only if the exponent has been stored in secure
+             * memory and we can thus assume it is a secret exponent.  */
+            if (esec || (mpi_limb_signed_t)e < 0)
               {
                 /*mpih_mul( xp, rp, rsize, bp, bsize );*/
                 if( bsize < KARATSUBA_THRESHOLD )
@@ -245,7 +252,9 @@ gcry_mpi_powm (gcry_mpi_t res,
                     _gcry_mpih_divrem(xp + msize, 0, xp, xsize, mp, msize);
                     xsize = msize;
                   }
-
+              }
+            if ( (mpi_limb_signed_t)e < 0 )
+              {
                 tp = rp; rp = xp; xp = tp;
                 rsize = xsize;
               }
