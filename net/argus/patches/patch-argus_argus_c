$OpenBSD: patch-argus_argus_c,v 1.2 2012/05/17 05:01:35 ajacoutot Exp $
--- argus/argus.c.orig	Tue Nov 10 10:43:21 2009
+++ argus/argus.c	Tue May 15 22:43:51 2012
@@ -243,6 +243,7 @@ main (int argc, char *argv[])
    uflag = 0;
    pflag = 6;
 
+   ArgusProgramName = argv[0];
    
    if (strchr (argv[0], '/')) {
 #if defined(HAVE_STRLCPY)
@@ -251,10 +252,9 @@ main (int argc, char *argv[])
       bzero(path, MAXPATHNAMELEN);
       strncpy(path, argv[0], MAXPATHNAMELEN - 1);
 #endif
-      argv[0] = strrchr(argv[0], '/') + 1;
+      ArgusProgramName = strrchr(argv[0], '/') + 1;
    }
 
-   ArgusProgramName = argv[0];
 
 #ifdef ARGUS_SYSLOG
 #ifndef LOG_PERROR
@@ -318,7 +318,7 @@ main (int argc, char *argv[])
    setArgusMarReportInterval (ArgusOutputTask,ARGUS_MARSTATUSTIMER);
 
    if (!doconf) {
-      snprintf (path, MAXPATHNAMELEN - 1, "/etc/argus.conf");
+      snprintf (path, MAXPATHNAMELEN - 1, SYSCONFDIR "/argus.conf");
       if (stat (path, &statbuf) == 0) {
          ArgusParseResourceFile (ArgusModel, path);
       }
@@ -506,7 +506,7 @@ main (int argc, char *argv[])
    if ((status = pthread_attr_init(&attr)) != 0)
       ArgusLog (LOG_ERR, "pthreads init error");
  
-#if defined(_POSIX_THREAD_PRIORITY_SCHEDULING) && !defined(sun) && !defined(CYGWIN) && !defined(OpenBSD)
+#if defined(_POSIX_THREAD_PRIORITY_SCHEDULING) && (_POSIX_THREAD_PRIORITY_SCHEDULING > 0) && !defined(sun) && !defined(CYGWIN)
    if ((status = pthread_attr_getschedpolicy(&attr, &thread_policy)) != 0)
       ArgusLog (LOG_ERR, "pthreads get policy error");
    if ((status = pthread_attr_getschedparam(&attr, &thread_param)) != 0)
@@ -556,7 +556,7 @@ main (int argc, char *argv[])
       ArgusLog(LOG_WARNING, "started");
 
    if (daemonflag) {
-      if (getArguspidflag() && ((ArgusPidFile = ArgusCreatePIDFile (ArgusSourceTask, ArgusPidPath, argv[0])) == NULL))
+      if (getArguspidflag() && ((ArgusPidFile = ArgusCreatePIDFile (ArgusSourceTask, ArgusPidPath, ArgusProgramName)) == NULL))
          ArgusLog (LOG_ERR, "daemon cannot create pid file");
    }
 
