$OpenBSD: patch-plugins_video_MPEG4-ffmpeg_mpeg4_cxx,v 1.1 2013/03/19 22:06:44 landry Exp $
fix with ffmpeg 1.1
https://projects.archlinux.org/svntogit/packages.git/commit/?h=packages/opal&id=278c8f93262ee8372b05c650a2e6456ad2d04950
--- plugins/video/MPEG4-ffmpeg/mpeg4.cxx.orig	Wed Feb 20 03:18:07 2013
+++ plugins/video/MPEG4-ffmpeg/mpeg4.cxx	Tue Mar 19 22:57:12 2013
@@ -100,9 +100,9 @@ extern "C" {
 #include <libavutil/intreadwrite.h>
 #include <libavutil/bswap.h>
 #include <libavcodec/mpegvideo.h>
-
 #else /* LIBAVCODEC_HAVE_SOURCE_DIR */
 #include "../common/ffmpeg.h"
+#include <libavutil/opt.h>
 #endif /* LIBAVCODEC_HAVE_SOURCE_DIR */
 }
 
@@ -589,17 +589,17 @@ void MPEG4EncoderContext::SetStaticEncodingParams(){
     m_avpicture->quality = m_videoQMin;
 
 #ifdef USE_ORIG
-    m_avcontext->flags |= CODEC_FLAG_PART;   // data partitioning
+    av_opt_set_int(m_avcontext->priv_data, "data_partitionin", 1, 0);
     m_avcontext->flags |= CODEC_FLAG_4MV;    // 4 motion vectors
 #else
     m_avcontext->max_b_frames=0; /*don't use b frames*/
     m_avcontext->flags|=CODEC_FLAG_AC_PRED;
-    m_avcontext->flags|=CODEC_FLAG_H263P_UMV;
+    av_opt_set_int(m_avcontext->priv_data, "umv", 1, 0);
     /*c->flags|=CODEC_FLAG_QPEL;*/ /*don't enable this one: this forces profile_level to advanced simple profile */
     m_avcontext->flags|=CODEC_FLAG_4MV;
     m_avcontext->flags|=CODEC_FLAG_GMC;
     m_avcontext->flags|=CODEC_FLAG_LOOP_FILTER;
-    m_avcontext->flags|=CODEC_FLAG_H263P_SLICE_STRUCT;
+    av_opt_set_int(m_avcontext->priv_data, "structured_slices", 1, 0);
 #endif
     m_avcontext->opaque = this;              // for use in RTP callback
 }
@@ -804,7 +804,7 @@ int MPEG4EncoderContext::EncodeFrames(const BYTE * src
         // Should the next frame be an I-Frame?
         if ((flags & PluginCodec_CoderForceIFrame) || (m_frameNum == 0))
         {
-            m_avpicture->pict_type = FF_I_TYPE;
+            m_avpicture->pict_type = AV_PICTURE_TYPE_I;
         }
         else // No IFrame requested, let avcodec decide what to do
         {
@@ -1325,7 +1325,7 @@ void MPEG4DecoderContext::SetFrameHeight(int height) {
 
 void MPEG4DecoderContext::SetStaticDecodingParams() {
     m_avcontext->flags |= CODEC_FLAG_4MV; 
-    m_avcontext->flags |= CODEC_FLAG_PART;
+    av_opt_set_int(m_avcontext->priv_data, "data_partitionin", 1, 0);
     m_avcontext->workaround_bugs = 0; // no workaround for buggy implementations
 }
 
