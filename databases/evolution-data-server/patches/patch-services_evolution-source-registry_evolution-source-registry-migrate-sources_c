$OpenBSD: patch-services_evolution-source-registry_evolution-source-registry-migrate-sources_c,v 1.1 2012/10/01 15:00:19 ajacoutot Exp $

From af70f1bec73b2c2ff72300cce93ffbd9c4b9d6ad Mon Sep 17 00:00:00 2001
From: Stef Walter <stefw@gnome.org>
Date: Mon, 16 Jul 2012 13:01:24 +0000
Subject: Bug 679914 - Replace libgnomekeyring with libsecret

--- services/evolution-source-registry/evolution-source-registry-migrate-sources.c.orig	Sun Sep 16 17:42:04 2012
+++ services/evolution-source-registry/evolution-source-registry-migrate-sources.c	Mon Oct  1 14:52:23 2012
@@ -21,7 +21,7 @@
 #include <glib/gstdio.h>
 #include <camel/camel.h>
 #include <libsoup/soup.h>
-#include <gnome-keyring.h>
+#include <libsecret/secret.h>
 
 #include <libebackend/libebackend.h>
 
@@ -137,15 +137,29 @@ struct _ParseData {
 	PropertyFunc property_func;
 };
 
-static GnomeKeyringPasswordSchema schema = {
-	GNOME_KEYRING_ITEM_GENERIC_SECRET,
+/* XXX Probably want to share this with module-online-accounts.c */
+static const SecretSchema schema = {
+	"org.gnome.Evolution.DataSource",
+	SECRET_SCHEMA_DONT_MATCH_NAME,
 	{
 		{ KEYRING_ITEM_ATTRIBUTE_NAME,
-		  GNOME_KEYRING_ATTRIBUTE_TYPE_STRING },
+		  SECRET_SCHEMA_ATTRIBUTE_STRING },
 		{ NULL, 0 }
 	}
 };
 
+/* XXX Probably want to share this with e-passwords.c */
+static const SecretSchema e_passwords_schema = {
+	"org.gnome.Evolution.Password",
+	SECRET_SCHEMA_DONT_MATCH_NAME,
+	{
+		{ "application", SECRET_SCHEMA_ATTRIBUTE_STRING, },
+		{ "user", SECRET_SCHEMA_ATTRIBUTE_STRING, },
+		{ "server", SECRET_SCHEMA_ATTRIBUTE_STRING, },
+		{ "protocol", SECRET_SCHEMA_ATTRIBUTE_STRING, },
+	}
+};
+
 /* Forward Declarations */
 void evolution_source_registry_migrate_sources (void);
 
@@ -252,7 +266,7 @@ migrate_keyring_entry (const gchar *uid,
                        const gchar *server,
                        const gchar *protocol)
 {
-	GnomeKeyringAttributeList *attributes;
+	GHashTable *attributes;
 	GList *found_list = NULL;
 	gchar *display_name;
 
@@ -262,37 +276,39 @@ migrate_keyring_entry (const gchar *uid,
 
 	display_name = g_strdup_printf (KEYRING_ITEM_DISPLAY_FORMAT, uid);
 
-	attributes = gnome_keyring_attribute_list_new ();
+	attributes = secret_attributes_build (
+		&e_passwords_schema,
+		"application", "Evolution",
+		"user", user,
+		"server", server,
+		"protocol", protocol,
+		NULL);
 
-	gnome_keyring_attribute_list_append_string (
-		attributes, "application", "Evolution");
-	if (user != NULL)
-		gnome_keyring_attribute_list_append_string (
-			attributes, "user", user);
-	if (server != NULL)
-		gnome_keyring_attribute_list_append_string (
-			attributes, "server", server);
-	if (protocol != NULL)
-		gnome_keyring_attribute_list_append_string (
-			attributes, "protocol", protocol);
+	found_list = secret_service_search_sync (
+		NULL, &e_passwords_schema, attributes,
+		SECRET_SEARCH_ALL |
+		SECRET_SEARCH_UNLOCK |
+		SECRET_SEARCH_LOAD_SECRETS,
+		NULL, NULL);
 
-	gnome_keyring_find_items_sync (
-		GNOME_KEYRING_ITEM_NETWORK_PASSWORD, attributes, &found_list);
-
 	/* Pick the first match we find. */
 	if (found_list != NULL) {
-		GnomeKeyringFound *found = found_list->data;
+		SecretItem *item = found_list->data;
+		SecretValue *secret = secret_item_get_secret (item);
 
 		/* Sanity check. */
-		g_return_if_fail (found->secret != NULL);
+		g_return_if_fail (secret != NULL);
 
-		gnome_keyring_store_password_sync (
-			&schema, GNOME_KEYRING_DEFAULT, display_name,
-			found->secret, KEYRING_ITEM_ATTRIBUTE_NAME, uid, NULL);
+		secret_password_store_sync (
+			&schema, SECRET_COLLECTION_DEFAULT, display_name,
+			secret_value_get (secret, NULL), NULL, NULL,
+			KEYRING_ITEM_ATTRIBUTE_NAME, uid, NULL);
+
+		secret_value_unref (secret);
 	}
 
-	gnome_keyring_attribute_list_free (attributes);
-	gnome_keyring_found_list_free (found_list);
+	g_list_free_full (found_list, g_object_unref);
+	g_hash_table_unref (attributes);
 
 	g_free (display_name);
 }
