$OpenBSD: patch-memory_memory_h,v 1.2 2011/12/13 08:46:51 giovanni Exp $

Fix for busmaster DMA transfers from device to memory

--- memory/memory.h.orig	Sun Nov 27 11:12:19 2011
+++ memory/memory.h	Wed Dec  7 01:50:56 2011
@@ -94,13 +94,22 @@ class BOCHSAPI BX_MEM_C : public logfunctions { (publi
   BX_MEM_SMF Bit8u*  get_vector(bx_phy_address addr);
   BX_MEM_SMF void    init_memory(Bit64u guest, Bit64u host);
   BX_MEM_SMF void    cleanup_memory(void);
+
   BX_MEM_SMF void    enable_smram(bx_bool enable, bx_bool restricted);
   BX_MEM_SMF void    disable_smram(void);
   BX_MEM_SMF bx_bool is_smram_accessible(void);
+
+  BX_MEM_SMF Bit8u*  getHostMemAddr(BX_CPU_C *cpu, bx_phy_address addr, unsigned rw);
+
+  // Note: accesses should always be contained within a single page
   BX_MEM_SMF void    readPhysicalPage(BX_CPU_C *cpu, bx_phy_address addr,
                                       unsigned len, void *data);
   BX_MEM_SMF void    writePhysicalPage(BX_CPU_C *cpu, bx_phy_address addr,
                                        unsigned len, void *data);
+
+  BX_MEM_SMF void    dmaReadPhysicalPage(bx_phy_address addr, unsigned len, Bit8u *data);
+  BX_MEM_SMF void    dmaWritePhysicalPage(bx_phy_address addr, unsigned len, Bit8u *data);
+
   BX_MEM_SMF void    load_ROM(const char *path, bx_phy_address romaddress, Bit8u type);
   BX_MEM_SMF void    load_RAM(const char *path, bx_phy_address romaddress, Bit8u type);
 #if (BX_DEBUGGER || BX_DISASM || BX_GDBSTUB)
@@ -110,7 +119,7 @@ class BOCHSAPI BX_MEM_C : public logfunctions { (publi
   BX_MEM_SMF bx_bool dbg_set_mem(bx_phy_address addr, unsigned len, Bit8u *buf);
   BX_MEM_SMF bx_bool dbg_crc32(bx_phy_address addr1, bx_phy_address addr2, Bit32u *crc);
 #endif
-  BX_MEM_SMF Bit8u* getHostMemAddr(BX_CPU_C *cpu, bx_phy_address addr, unsigned rw);
+
   BX_MEM_SMF bx_bool registerMemoryHandlers(void *param, memory_handler_t read_handler,
                   memory_handler_t write_handler, memory_direct_access_handler_t da_handler,
                   bx_phy_address begin_addr, bx_phy_address end_addr);
@@ -121,6 +130,7 @@ class BOCHSAPI BX_MEM_C : public logfunctions { (publi
      return registerMemoryHandlers(param, read_handler, write_handler, NULL, begin_addr, end_addr);
   }
   BX_MEM_SMF bx_bool unregisterMemoryHandlers(void *param, bx_phy_address begin_addr, bx_phy_address end_addr);
+
   BX_MEM_SMF Bit64u  get_memory_len(void);
   BX_MEM_SMF void allocate_block(Bit32u index);
   BX_MEM_SMF Bit8u* alloc_vector_aligned(Bit32u bytes, Bit32u alignment);
