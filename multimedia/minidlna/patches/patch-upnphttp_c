$OpenBSD: patch-upnphttp_c,v 1.2 2013/03/15 17:15:24 sthen Exp $
--- upnphttp.c.orig	Sat Jun 30 01:31:43 2012
+++ upnphttp.c	Fri Mar 15 16:57:19 2013
@@ -58,7 +58,9 @@
 #include <sys/stat.h>
 #include <fcntl.h>
 #include <errno.h>
+#if defined(__linux__)
 #include <sys/sendfile.h>
+#endif
 #include <arpa/inet.h>
 #include <sys/time.h>
 #include <sys/resource.h>
@@ -1316,6 +1318,7 @@ send_file(struct upnphttp * h, int sendfd, off_t offse
 
 	while( offset < end_offset )
 	{
+#if defined(__linux__)
 		if( try_sendfile )
 		{
 			send_size = ( ((end_offset - offset) < MAX_BUFFER_SIZE) ? (end_offset - offset + 1) : MAX_BUFFER_SIZE);
@@ -1335,6 +1338,7 @@ send_file(struct upnphttp * h, int sendfd, off_t offse
 				continue;
 			}
 		}
+#endif
 		/* Fall back to regular I/O */
 		if( !buf )
 			buf = malloc(MIN_BUFFER_SIZE);
@@ -1411,6 +1415,10 @@ SendResp_icon(struct upnphttp * h, char * icon)
 	                                       "Server: " MINIDLNA_SERVER_STRING "\r\n\r\n",
 	                                       mime, size, date);
 
+#ifndef MSG_MORE
+/* linux uses this to combine multiple send() calls into a single packet */
+#define MSG_MORE 0
+#endif
 	if( send_data(h, header, ret, MSG_MORE) == 0 )
 	{
  		if( h->req_command != EHead )
@@ -1424,12 +1432,11 @@ SendResp_albumArt(struct upnphttp * h, char * object)
 {
 	char header[512];
 	char *path;
-	char *dash;
 	char date[30];
 	time_t curtime = time(NULL);
 	off_t size;
-	int fd;
-	int ret;
+	long long id;
+	int fd, ret;
 
 	if( h->reqflags & (FLAG_XFERSTREAMING|FLAG_RANGE) )
 	{
@@ -1438,18 +1445,16 @@ SendResp_albumArt(struct upnphttp * h, char * object)
 		return;
 	}
 
-	dash = strchr(object, '-');
-	if( dash )
-		*dash = '\0';
+	id = strtoll(object, NULL, 10);
 
-	path = sql_get_text_field(db, "SELECT PATH from ALBUM_ART where ID = '%s'", object);
+	path = sql_get_text_field(db, "SELECT PATH from ALBUM_ART where ID = '%lld'", id);
 	if( !path )
 	{
 		DPRINTF(E_WARN, L_HTTP, "ALBUM_ART ID %s not found, responding ERROR 404\n", object);
 		Send404(h);
 		return;
 	}
-	DPRINTF(E_INFO, L_HTTP, "Serving album art ID: %s [%s]\n", object, path);
+	DPRINTF(E_INFO, L_HTTP, "Serving album art ID: %lld [%s]\n", id, path);
 
 	fd = open(path, O_RDONLY);
 	if( fd < 0 ) {
@@ -1492,17 +1497,19 @@ SendResp_caption(struct upnphttp * h, char * object)
 	char date[30];
 	time_t curtime = time(NULL);
 	off_t size;
+	long long id;
 	int fd, ret;
 
-	strip_ext(object);
-	path = sql_get_text_field(db, "SELECT PATH from CAPTIONS where ID = %s", object);
+	id = strtoll(object, NULL, 10);
+
+	path = sql_get_text_field(db, "SELECT PATH from CAPTIONS where ID = %lld", id);
 	if( !path )
 	{
 		DPRINTF(E_WARN, L_HTTP, "CAPTION ID %s not found, responding ERROR 404\n", object);
 		Send404(h);
 		return;
 	}
-	DPRINTF(E_INFO, L_HTTP, "Serving caption ID: %s [%s]\n", object, path);
+	DPRINTF(E_INFO, L_HTTP, "Serving caption ID: %lld [%s]\n", id, path);
 
 	fd = open(path, O_RDONLY);
 	if( fd < 0 ) {
@@ -1541,6 +1548,7 @@ SendResp_thumbnail(struct upnphttp * h, char * object)
 	char *path;
 	char date[30];
 	time_t curtime = time(NULL);
+	long long id;
 	int ret;
 	ExifData *ed;
 	ExifLoader *l;
@@ -1552,15 +1560,15 @@ SendResp_thumbnail(struct upnphttp * h, char * object)
 		return;
 	}
 
-	strip_ext(object);
-	path = sql_get_text_field(db, "SELECT PATH from DETAILS where ID = '%s'", object);
+	id = strtoll(object, NULL, 10);
+	path = sql_get_text_field(db, "SELECT PATH from DETAILS where ID = '%lld'", id);
 	if( !path )
 	{
 		DPRINTF(E_WARN, L_HTTP, "DETAIL ID %s not found, responding ERROR 404\n", object);
 		Send404(h);
 		return;
 	}
-	DPRINTF(E_INFO, L_HTTP, "Serving thumbnail for ObjectId: %s [%s]\n", object, path);
+	DPRINTF(E_INFO, L_HTTP, "Serving thumbnail for ObjectId: %lld [%s]\n", id, path);
 
 	if( access(path, F_OK) != 0 )
 	{
