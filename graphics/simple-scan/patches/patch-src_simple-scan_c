$OpenBSD: patch-src_simple-scan_c,v 1.5 2012/09/30 07:19:18 ajacoutot Exp $

No gudev under OpenBSD.

--- src/simple-scan.c.orig	Tue Sep 25 05:11:56 2012
+++ src/simple-scan.c	Sun Sep 30 09:15:20 2012
@@ -15,7 +15,9 @@
 #include <glib.h>
 #include <glib-object.h>
 #include <gtk/gtk.h>
+#ifndef __OpenBSD__
 #include <gudev/gudev.h>
+#endif
 #include <stdlib.h>
 #include <string.h>
 #include <stdio.h>
@@ -159,7 +161,9 @@ struct _SimpleScanClass {
 struct _SimpleScanPrivate {
 	ScanDevice* default_device;
 	gboolean have_devices;
+#ifndef __OpenBSD__
 	GUdevClient* udev_client;
+#endif
 	UserInterface* ui;
 	Scanner* scanner;
 	Book* book;
@@ -331,8 +335,10 @@ static void simple_scan_scanner_failed_cb (SimpleScan*
 static void _simple_scan_scanner_failed_cb_scanner_scan_failed (Scanner* _sender, gint error_code, const gchar* error_string, gpointer self);
 static void simple_scan_scanner_scanning_changed_cb (SimpleScan* self, Scanner* scanner);
 static void _simple_scan_scanner_scanning_changed_cb_scanner_scanning_changed (Scanner* _sender, gpointer self);
+#ifndef __OpenBSD__
 static void simple_scan_on_uevent (SimpleScan* self, GUdevClient* client, const gchar* action, GUdevDevice* device);
 static void _simple_scan_on_uevent_g_udev_client_uevent (GUdevClient* _sender, const gchar* action, GUdevDevice* device, gpointer self);
+#endif
 void user_interface_set_scan_devices (UserInterface* self, GList* devices);
 void user_interface_set_selected_device (UserInterface* self, const gchar* device);
 static void _scan_device_unref0_ (gpointer var);
@@ -485,9 +491,11 @@ static void _simple_scan_scanner_scanning_changed_cb_s
 }
 
 
+#ifndef __OpenBSD__
 static void _simple_scan_on_uevent_g_udev_client_uevent (GUdevClient* _sender, const gchar* action, GUdevDevice* device, gpointer self) {
 	simple_scan_on_uevent (self, _sender, action, device);
 }
+#endif
 
 
 static void _scan_device_unref0_ (gpointer var) {
@@ -526,8 +534,10 @@ static void simple_scan_real_startup (GApplication* ba
 	gint _subsystems_size_;
 	gchar** _tmp18_;
 	gint _tmp18__length1;
+#ifndef __OpenBSD__
 	GUdevClient* _tmp19_;
 	GUdevClient* _tmp20_;
+#endif
 	ScanDevice* _tmp21_;
 	self = (SimpleScan*) base;
 	G_APPLICATION_CLASS (simple_scan_parent_class)->startup ((GApplication*) G_TYPE_CHECK_INSTANCE_CAST (self, GTK_TYPE_APPLICATION, GtkApplication));
@@ -574,11 +584,13 @@ static void simple_scan_real_startup (GApplication* ba
 	_subsystems_size_ = subsystems_length1;
 	_tmp18_ = subsystems;
 	_tmp18__length1 = subsystems_length1;
+#ifndef __OpenBSD__
 	_tmp19_ = g_udev_client_new (_tmp18_);
 	_g_object_unref0 (self->priv->udev_client);
 	self->priv->udev_client = _tmp19_;
 	_tmp20_ = self->priv->udev_client;
 	g_signal_connect_object (_tmp20_, "uevent", (GCallback) _simple_scan_on_uevent_g_udev_client_uevent, self, 0);
+#endif
 	_tmp21_ = self->priv->default_device;
 	if (_tmp21_ != NULL) {
 		GList* device_list;
@@ -628,8 +640,10 @@ static void simple_scan_real_shutdown (GApplication* b
 	self->priv->book = NULL;
 	_user_interface_unref0 (self->priv->ui);
 	self->priv->ui = NULL;
+#ifndef __OpenBSD__
 	_g_object_unref0 (self->priv->udev_client);
 	self->priv->udev_client = NULL;
+#endif
 	_tmp0_ = self->priv->scanner;
 	scanner_free (_tmp0_);
 }
@@ -1741,6 +1755,7 @@ static void simple_scan_log_cb (const gchar* log_domai
 }
 
 
+#ifndef __OpenBSD__
 static void simple_scan_on_uevent (SimpleScan* self, GUdevClient* client, const gchar* action, GUdevDevice* device) {
 	Scanner* _tmp0_;
 	g_return_if_fail (self != NULL);
@@ -1750,6 +1765,7 @@ static void simple_scan_on_uevent (SimpleScan* self, G
 	_tmp0_ = self->priv->scanner;
 	scanner_redetect (_tmp0_);
 }
+#endif
 
 
 static glong string_strnlen (gchar* str, glong maxlen) {
@@ -2372,7 +2388,9 @@ gint simple_scan_main (gchar** args, int args_length1)
 		const gchar* _tmp37_;
 		gchar* _tmp38_;
 		_tmp30_ = scan_device_new ();
+#ifndef __OpenBSD__
 		_scan_device_unref0 (device);
+#endif
 		device = _tmp30_;
 		_tmp31_ = device;
 		_tmp32_ = args;
@@ -2449,7 +2467,9 @@ static void simple_scan_finalize (GObject* obj) {
 	SimpleScan * self;
 	self = G_TYPE_CHECK_INSTANCE_CAST (obj, TYPE_SIMPLE_SCAN, SimpleScan);
 	_scan_device_unref0 (self->priv->default_device);
+#ifndef __OpenBSD__
 	_g_object_unref0 (self->priv->udev_client);
+#endif
 	_user_interface_unref0 (self->priv->ui);
 	_scanner_unref0 (self->priv->scanner);
 	_book_unref0 (self->priv->book);
